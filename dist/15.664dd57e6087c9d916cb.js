(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{"+ljL":function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <app-search-filter\n          [placeholder]="\'Search by full name, id, email and cabId \'"\n          (setSearch)="setSearch($event)"\n        >\n        </app-search-filter>\n    </div>\n    <div class="flex_col_sm_5">\n        <ul class="btn_wrapper text-right">\n          <li>\n            <app-filter-count\n              [filterCount]="appliedFilterCount"\n            ></app-filter-count>\n          </li>\n          <li>\n            <button\n              mat-raised-button\n              (click)="showFilter = !showFilter"\n              color="primary"\n            >\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          </ul>\n    </div>\n    </div>\n    <div\n      class="white_wrapper filter_wrapper"\n      [class.filter_wrapper_show]="showFilter"\n    >\n      <div class="flex_row">\n        <div class="flex_col_sm_6">\n          <app-date-filter [dateObject]="filterObject.registrationDate">\n          </app-date-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.shiftType"\n          ></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <h4>\n            &nbsp;\n          </h4>\n          <mat-form-field>\n            <mat-select\n              placeholder="Shift"\n              [formControl]="filterForm.controls.shiftName"\n            >\n              \x3c!-- <mat-option *ngFor="let item of shifts" [value]="item.shiftName">{{ item.shiftName}}</mat-option> --\x3e\n              \x3c!-- changes by satyam -> Includes shift timing --\x3e \n              <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n                >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button\n                filter_btn\n                mat-stroked-button\n                [disabled]="disable()"\n                (click)="resetFilter()"\n              >\n                Reset\n              </button>\n            </li>\n    \n            <li>\n              <button\n                filter_btn\n                mat-raised-button\n                color="primary"\n                [disabled]="disable()"\n                (click)="filter()"\n              >\n                Filter\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n<table mat-table [dataSource]="rescheduled" class="mt-30">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef> Full Name </th>\n        <td mat-cell *matCellDef="let element"> {{element?.name | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="empid">\n        <th mat-header-cell *matHeaderCellDef>Emp ID </th>\n        <td mat-cell *matCellDef="let element"> {{element?.employeeId | checkNull}} </td>\n    </ng-container>\n\n     \x3c!-- Added Gender - Shivakumar A  --\x3e\n     <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.gender | checkNull}} </td>\n    </ng-container>\n    \n    <ng-container matColumnDef="email">\n        <th mat-header-cell *matHeaderCellDef> Email ID </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.email }}"> {{element?.email | checkNull}} </td>\n    </ng-container>\n    \x3c!-- filter -- satyam --\x3e\n    \x3c!-- <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef> Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element?.mobileNo | checkNull}} </td>\n    </ng-container> --\x3e\n\n    <ng-container matColumnDef="cabid">\n        <th mat-header-cell *matHeaderCellDef> Cab ID </th>\n        \x3c!-- <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.cabBadge}} </td> --\x3e\n        \x3c!-- Added newCabBadgeId - Shivakumar A --\x3e\n        <td mat-cell *matCellDef="let element"> {{element?.newCabBadgeId}}\n             \x3c!-- Added Medical cab - Shivakumar A --\x3e\n        <b class="medical_cab_symbol_option" *ngIf="element?.roster?.cab?.type === medicalCabValue">&#43;</b> </td>\n\n    </ng-container>\n\n    \x3c!-- <ng-container matColumnDef="scheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Scheduled Date </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.rosterDate | customDate | checkNull}} </td>\n    </ng-container> --\x3e\n\n    \x3c!-- <ng-container matColumnDef="tripdate">\n        <th mat-header-cell *matHeaderCellDef> Scheduled Timings </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.route?.shiftTime | checkNull}} </td>\n    </ng-container> --\x3e\n\n    \x3c!-- Merged Date and time - Shivakumar A --\x3e\n    \x3c!-- filter -- satyam --\x3e\n    \x3c!-- <ng-container matColumnDef="scheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Scheduled For </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.rosterDate | customDate | checkNull}} {{element?.roster?.route?.shiftTime | checkNull}}</td>\n    </ng-container> --\x3e\n\n    \x3c!-- <ng-container matColumnDef="rescheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Rescheduled Date </th>\n        <td mat-cell *matCellDef="let element"> {{element?.scheduleTime | customDate | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="cabtime">\n        <th mat-header-cell *matHeaderCellDef> Rescheduledfor Time </th>\n        <td mat-cell *matCellDef="let element"> {{element?.shiftTime | checkNull}} </td>\n    </ng-container> --\x3e\n\n    \x3c!-- Merged Date and time - Shivakumar A --\x3e\n    <ng-container matColumnDef="rescheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Rescheduled for </th>\n        <td mat-cell *matCellDef="let element"> {{element?.scheduleTime | customDate | checkNull}} {{element?.shiftTime | checkNull}}</td>\n    </ng-container>\n    \x3c!-- filter by satyam --\x3e\n    <ng-container matColumnDef="currentShift">\n        <th mat-header-cell *matHeaderCellDef> Current Shift </th>\n        <td mat-cell *matCellDef="let element">  {{element?.roster.route.shiftName+"("+element.roster.route.shiftTime+")"}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="requestedShift">\n        <th mat-header-cell *matHeaderCellDef> Requested Shift </th>\n        <td mat-cell *matCellDef="let element">{{element?.shiftName+"("+element.shiftTime+")"}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="tripType">\n        <th mat-header-cell *matHeaderCellDef>Trip Type</th>\n        <td mat-cell *matCellDef="let element"> {{element?.shiftType | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="pickup">\n        <th mat-header-cell *matHeaderCellDef> Pickup Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.pickUpLocation }}" > {{element?.pickUpLocation | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="dropoff">\n        <th mat-header-cell *matHeaderCellDef> DropOff Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.roster?.officeAddress }}"> {{element?.roster.officeAddress | checkNull}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef="cancellreason">\n        \x3c!-- reason for crf -- satyam --\x3e\n        <th mat-header-cell *matHeaderCellDef>Reason for CRF </th>\n        <td mat-cell *matCellDef="let element"> {{element?.reason | checkNull}} </td>\n    </ng-container>\n\n    \x3c!-- Added Created Time  - Shivakumar A --\x3e\n<ng-container matColumnDef="createdAt">\n    <th mat-header-cell *matHeaderCellDef > Requested At </th>\n    <td mat-cell *matCellDef="let element"> {{element.created | date:\'short\'}} </td>\n</ng-container>\n\n    <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu" xPosition="before">\n                \x3c!-- crf date validation -- satyam --\x3e\n                <button  mat-menu-item (click)="openDetailDialog(element)">\n                    <mat-icon matTooltip="Approve">done</mat-icon>\n                    Approve\n                </button>\n\n                <button mat-menu-item (click)="cancel(\'cancelled\',element)">\n                    <mat-icon matTooltip="Cancel">delete</mat-icon>\n                    Cancel\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n\n\n<div class="white_wrapper" *ngIf="rescheduled.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions" (page)="changePage($event)">\n    </mat-paginator>\n</div>\n'},"3V+5":function(e,t,n){"use strict";var a=n("mrSG"),l=n("CcnG"),r=n("vblm"),i=n("FaG1"),o=function(){function e(){}return e.prototype.transform=function(e,t,n){return e&&e.errors?this.getValidationError(e,t,n):""},e.prototype.getValidationError=function(e,t,n){return this.charMessage=n||"characters",e.hasError("required")?t+" is required":e.hasError("pattern")?function(e,t){return e==i.a.email?"Please enter a valid "+t.toLowerCase():e==i.a.password?Object(r.l)(t)+" can not contain blank spaces":e==i.a.name?Object(r.l)(t)+" can not be blank":e==i.a.phone?Object(r.l)(t)+" must contain only numbers and can not start with 0":e==i.a.onlyNumber?"Only digits are allowed":e==i.a.price?Object(r.l)(t)+" must be numeric":e==i.a.alphaNumeric?Object(r.l)(t)+" can contain only characters and numbers":e==i.a.alphaNumericWithSpace?Object(r.l)(t)+" can contain only characters and numbers":e==i.a.alphabetsWithSpace?Object(r.l)(t)+" can contain only characters and space":e==i.a.noSpace?Object(r.l)(t)+" can't contain space":void 0}(e.errors.pattern.requiredPattern,t):e.hasError("minlength")?Object(r.l)(t)+" must be at least "+e.errors.minlength.requiredLength+" "+this.charMessage+" long":e.hasError("maxlength")?Object(r.l)(t)+" can not be more than "+e.errors.maxlength.requiredLength+" "+this.charMessage+" long":e.hasError("matchPassword")?r.i[t].matchPassword||"":e.hasError("min")?Object(r.l)(t)+" can not be less than "+e.errors.min.min:e.hasError("max")?Object(r.l)(t)+" can not be greater than "+e.errors.max.max:e.hasError("alpha")?" Please enter correct "+Object(r.l)(t):void 0},e=a.__decorate([Object(l.W)({name:"validate",pure:!1}),a.__metadata("design:paramtypes",[])],e)}(),s=n("Ip0R"),c=n("gIcY");n.d(t,"a",(function(){return d}));var d=function(){function e(){}return e=a.__decorate([Object(l.L)({imports:[s.c,c.n],declarations:[o],exports:[o],providers:[]})],e)}()},"6DF+":function(e,t,n){"use strict";n.r(t),t.default='<div class="parentWrapper">\n    <div class="white_wrapper">\n        <mat-tab-group (selectedTabChange)="tabRefresh($event)">\n\n            \x3c!-- <mat-tab label="Cancelled">\n                <app-cancelled [isCancelledTab]="cancelledTabChange"></app-cancelled>\n            </mat-tab> --\x3e\n\n            \x3c!-- Added Badge - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingCancelledCount > 0">\n                        <span matBadge={{TotalPendingData.pendingCancelledCount}} matBadgeOverlap="false" matBadgeColor="warn">Cancelled</span>\n                    </div>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingCancelledCount == 0">\n                        <span>Cancelled</span>\n                    </div>\n                </ng-template>\n                <app-cancelled [isCancelledTab]="cancelledTabChange"></app-cancelled>\n            </mat-tab>\n\n            \x3c!-- <mat-tab label="Reschedule">\n                <app-reschedule [isRescheduledTab]="rescheduledTabChange"></app-reschedule>\n            </mat-tab> --\x3e\n\n            \x3c!-- Added Badge - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingRescheduleCount > 0">\n                        <span matBadge={{TotalPendingData.pendingRescheduleCount}} matBadgeOverlap="false" matBadgeColor="warn">CRF</span>\n                    </div>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingRescheduleCount == 0">\n                        <span>CRF</span>\n                    </div>\n                </ng-template>\n                <app-reschedule [isRescheduledTab]="rescheduledTabChange"></app-reschedule>\n            </mat-tab>\n\n            \x3c!-- <mat-tab label="SOS">\n                <app-sos [isSosTab]="sosTabChange"></app-sos>\n            </mat-tab> --\x3e\n            \x3c!-- Added Badge - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingSosCount > 0">\n                        <span matBadge={{TotalPendingData.pendingSosCount}} matBadgeOverlap="false" matBadgeColor="warn">SOS</span>\n                    </div>\n\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingSosCount == 0">\n                        <span>SOS</span>\n                    </div>\n                </ng-template>\n                <app-sos [isSosTab]="sosTabChange"></app-sos>\n            </mat-tab>\n\n            \x3c!-- <mat-tab label="Address Change">\n                <app-address-change-request [isAddressTab]="addressTabChange"></app-address-change-request>\n            </mat-tab> --\x3e\n\n            \x3c!-- Added Badge - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingAddressCount > 0">\n                        <span matBadge={{TotalPendingData.pendingAddressCount}} matBadgeOverlap="false" matBadgeColor="warn">Address Change</span>\n                    </div>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingAddressCount == 0">\n                        <span>Address Change</span>\n                    </div>\n                </ng-template>\n                <app-address-change-request [isAddressTab]="addressTabChange"></app-address-change-request>\n                \n            </mat-tab>\n\n            \x3c!-- <mat-tab label="Other Requests">\n                <app-other-requests [isOtherTab]="otherTabChange"></app-other-requests>\n            </mat-tab> --\x3e\n\n            \x3c!-- Added Badge - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingOtherRequestsCount > 0">\n                        <span matBadge={{TotalPendingData.pendingOtherRequestsCount}} matBadgeOverlap="false" matBadgeColor="warn">Other Requests</span>\n                    </div>\n\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingOtherRequestsCount == 0">\n                        <span>Other Requests</span>\n                    </div>\n                </ng-template>\n                <app-other-requests [isOtherTab]="otherTabChange"></app-other-requests>\n                \n            </mat-tab>\n\n            \x3c!-- Added No Show Tab - Shivakumar A --\x3e\n            <mat-tab>\n                <ng-template matTabLabel>\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingNoShowCount > 0">\n                        <span matBadge={{TotalPendingData.pendingNoShowCount}} matBadgeOverlap="false" matBadgeColor="warn">No Show</span>\n                    </div>\n\n                    <div *ngIf="TotalPendingData != null && TotalPendingData.pendingNoShowCount == 0">\n                        <span>No Show</span>\n                    </div>\n                </ng-template>\n                <app-no-show [isNoShowTab]="noShowTabChange"></app-no-show>\n                \n            </mat-tab>\n        </mat-tab-group>\n    </div>\n</div>\n'},"6Wmm":function(e,t,n){"use strict";n.d(t,"a",(function(){return u}));var a=n("mrSG"),l=n("lLAP"),r=n("n6gG"),i=n("CcnG"),o=n("Wf4p"),s=n("wFw1"),c=0,d=function(){},m=function(e){function t(t,n,a,l,r){var o=e.call(this)||this;if(o._ngZone=t,o._elementRef=n,o._ariaDescriber=a,o._renderer=l,o._animationMode=r,o._hasContent=!1,o._color="primary",o._overlap=!0,o.position="above after",o.size="medium",o._id=c++,Object(i.zb)()){var s=n.nativeElement;if(s.nodeType!==s.ELEMENT_NODE)throw Error("matBadge must be attached to an element node.")}return o}return Object(a.__extends)(t,e),Object.defineProperty(t.prototype,"color",{get:function(){return this._color},set:function(e){this._setColor(e),this._color=e},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"overlap",{get:function(){return this._overlap},set:function(e){this._overlap=Object(r.c)(e)},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"description",{get:function(){return this._description},set:function(e){if(e!==this._description){var t=this._badgeElement;this._updateHostAriaDescription(e,this._description),this._description=e,t&&(e?t.setAttribute("aria-label",e):t.removeAttribute("aria-label"))}},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"hidden",{get:function(){return this._hidden},set:function(e){this._hidden=Object(r.c)(e)},enumerable:!0,configurable:!0}),t.prototype.isAbove=function(){return-1===this.position.indexOf("below")},t.prototype.isAfter=function(){return-1===this.position.indexOf("before")},t.prototype.ngOnChanges=function(e){var t=e.content;if(t){var n=t.currentValue;this._hasContent=null!=n&&(""+n).trim().length>0,this._updateTextContent()}},t.prototype.ngOnDestroy=function(){var e=this._badgeElement;e&&(this.description&&this._ariaDescriber.removeDescription(e,this.description),this._renderer.destroyNode&&this._renderer.destroyNode(e))},t.prototype.getBadgeElement=function(){return this._badgeElement},t.prototype._updateTextContent=function(){return this._badgeElement?this._badgeElement.textContent=this.content:this._badgeElement=this._createBadgeElement(),this._badgeElement},t.prototype._createBadgeElement=function(){var e=this._renderer.createElement("span");return this._clearExistingBadges("mat-badge-content"),e.setAttribute("id","mat-badge-content-"+this._id),e.classList.add("mat-badge-content"),e.textContent=this.content,"NoopAnimations"===this._animationMode&&e.classList.add("_mat-animation-noopable"),this.description&&e.setAttribute("aria-label",this.description),this._elementRef.nativeElement.appendChild(e),"function"==typeof requestAnimationFrame&&"NoopAnimations"!==this._animationMode?this._ngZone.runOutsideAngular((function(){requestAnimationFrame((function(){e.classList.add("mat-badge-active")}))})):e.classList.add("mat-badge-active"),e},t.prototype._updateHostAriaDescription=function(e,t){var n=this._updateTextContent();t&&this._ariaDescriber.removeDescription(n,t),e&&this._ariaDescriber.describe(n,e)},t.prototype._setColor=function(e){e!==this._color&&(this._color&&this._elementRef.nativeElement.classList.remove("mat-badge-"+this._color),e&&this._elementRef.nativeElement.classList.add("mat-badge-"+e))},t.prototype._clearExistingBadges=function(e){for(var t=this._elementRef.nativeElement,n=t.children.length;n--;){var a=t.children[n];a.classList.contains(e)&&t.removeChild(a)}},t.decorators=[{type:i.t,args:[{selector:"[matBadge]",inputs:["disabled: matBadgeDisabled"],host:{class:"mat-badge","[class.mat-badge-overlap]":"overlap","[class.mat-badge-above]":"isAbove()","[class.mat-badge-below]":"!isAbove()","[class.mat-badge-before]":"!isAfter()","[class.mat-badge-after]":"isAfter()","[class.mat-badge-small]":'size === "small"',"[class.mat-badge-medium]":'size === "medium"',"[class.mat-badge-large]":'size === "large"',"[class.mat-badge-hidden]":"hidden || !_hasContent","[class.mat-badge-disabled]":"disabled"}}]}],t.ctorParameters=function(){return[{type:i.Q},{type:i.u},{type:l.c},{type:i.Z},{type:String,decorators:[{type:i.R},{type:i.C,args:[s.a]}]}]},t.propDecorators={color:[{type:i.G,args:["matBadgeColor"]}],overlap:[{type:i.G,args:["matBadgeOverlap"]}],position:[{type:i.G,args:["matBadgePosition"]}],content:[{type:i.G,args:["matBadge"]}],description:[{type:i.G,args:["matBadgeDescription"]}],size:[{type:i.G,args:["matBadgeSize"]}],hidden:[{type:i.G,args:["matBadgeHidden"]}]},t}(Object(o.A)(d)),u=function(){function e(){}return e.decorators=[{type:i.L,args:[{imports:[l.a,o.k],exports:[m],declarations:[m]}]}],e}()},"8Js9":function(e,t,n){"use strict";n.d(t,"a",(function(){return g}));var a=n("mrSG"),l=n("CcnG"),r=n("gIcY"),i=n("buKM"),o=n("FTgb"),s=n("iiAa"),c=n("jRgp"),d=n("vblm"),m=n("+7By"),u=n("67Y/"),p=n("9Z1F"),h=n("26FU"),f=n("XlPw"),g=function(){function e(e,t,n,a){this._formService=e,this._formBuilder=t,this._http=n,this._uitilityService=a,this.messageFromCancelled=new h.a(0),this.TotalPendingData=this.messageFromCancelled.asObservable()}return e.prototype.changeMessageData=function(e){this.messageFromCancelled.next(e),this.totalCount=e.pendingSosCount+e.pendingAddressCount+e.pendingRescheduleCount+e.pendingOtherRequestsCount+e.pendingCancelledCount+e.pendingNoShowCount,localStorage.setItem("COUNT",this.totalCount)},e.prototype.createFilterObject=function(e){return{registrationDate:{label:"Date",fromDate:e.controls.fromDate,toDate:e.controls.toDate},shiftType:{label:"Shift Type",list:[{viewValue:"Login Trips",value:"login"},{viewValue:"Logout Trips",value:"logout"}],control:e.controls.shiftType},userType:{label:"User Type",list:[{viewValue:"DRIVER",value:2},{viewValue:"EMPLOYEE",value:1}],control:e.controls.userType}}},e.prototype.getFilterForm=function(){return this._formBuilder.group(this._formService.getFilterFormControls(["fromDate","toDate","shiftType","shiftName","userType"]))},e.prototype.searchVendor=function(){return this._http.get(m.V,!1)},e.prototype.getCabsForRoster=function(e){return this._http.post(c.cb,e)},e.prototype.createCabForm=function(){return this._formBuilder.group({vendorId:this._formService.getControl("dropdown"),cabId:this._formService.getControl("dropdown")})},e.prototype.getAllSosRequests=function(e){return this._http.get(c.bb,e)},e.prototype.getAllOtherRequests=function(e){return this._http.get(c.Z,e)},e.prototype.getRescheduleRequests=function(e){return this._http.get(c.ub,e)},e.prototype.getCancelledRequests=function(e){return this._http.get(c.A,e)},e.prototype.getUpdatedAddressRequest=function(e){return this._http.get(c.Pb,e)},e.prototype.getNoShowRequests=function(e){return this._http.get(c.ob,e)},e.prototype.changeSosStatus=function(e){return a.__awaiter(this,void 0,void 0,(function(){var t,n,l,r,i;return a.__generator(this,(function(a){switch(a.label){case 0:return a.trys.push([0,8,,9]),t=e.status.toUpperCase(),n={message:d.d[t].confirm("Sos")},[4,this._uitilityService.openDialog(n).toPromise()];case 1:return a.sent()?"REJECT"!==t?[3,3]:[4,this._http.put(c.tb+e.userId,"").toPromise()]:[3,6];case 2:return r=a.sent(),[3,5];case 3:return[4,this._http.put(c.xb+e.userId,"").toPromise()];case 4:r=a.sent(),a.label=5;case 5:return l=r,this._uitilityService.showAlert(d.d[t].success("Sos")),[2,Promise.resolve(l)];case 6:return[2,Promise.resolve(null)];case 7:return[3,9];case 8:return i=a.sent(),[2,Promise.reject(i)];case 9:return[2]}}))}))},e.prototype.changeOtherRequestStatus=function(e){return a.__awaiter(this,void 0,void 0,(function(){var t,n,l,r,i;return a.__generator(this,(function(a){switch(a.label){case 0:return a.trys.push([0,8,,9]),t=e.status.toUpperCase(),n={message:d.d[t].confirm("Sos")},[4,this._uitilityService.openDialog(n).toPromise()];case 1:return a.sent()?"REJECT"!==t?[3,3]:[4,this._http.put(c.sb+e.userId,"").toPromise()]:[3,6];case 2:return r=a.sent(),[3,5];case 3:return[4,this._http.put(c.wb+e.userId,"").toPromise()];case 4:r=a.sent(),a.label=5;case 5:return l=r,this._uitilityService.showAlert(d.d[t].success("Sos")),[2,Promise.resolve(l)];case 6:return[2,Promise.resolve(null)];case 7:return[3,9];case 8:return i=a.sent(),[2,Promise.reject(i)];case 9:return[2]}}))}))},e.prototype.approveRescheduleRequest=function(e){return a.__awaiter(this,void 0,void 0,(function(){var t,n,l,r,i;return a.__generator(this,(function(a){switch(a.label){case 0:return a.trys.push([0,8,,9]),t=e.status.toUpperCase(),n={message:d.d[t].confirm("Reschedule Request")},[4,this._uitilityService.openDialog(n).toPromise()];case 1:return a.sent()?"APPROVED"!==t?[3,3]:[4,this._http.put(c.k,e.obj).toPromise()]:[3,6];case 2:return r=a.sent(),[3,5];case 3:return[4,this._http.put(c.B,e.obj).toPromise()];case 4:r=a.sent(),a.label=5;case 5:return l=r,this._uitilityService.showAlert(d.d[t].success("Reschedule Request")),[2,Promise.resolve(l)];case 6:return[2,Promise.resolve(null)];case 7:return[3,9];case 8:return i=a.sent(),[2,Promise.reject(i)];case 9:return[2]}}))}))},e.prototype.approveRequest=function(e){var t=this;return this._http.put(c.k,e).pipe(Object(u.a)((function(e){return t._uitilityService.showAlert(d.d.UPDATED("Request")),e})),Object(p.a)((function(e){return Object(f.a)(e)})))},e.prototype.changeStatus=function(e){return a.__awaiter(this,void 0,void 0,(function(){var t,n,l,r;return a.__generator(this,(function(a){switch(a.label){case 0:return a.trys.push([0,5,,6]),t=e.actionType.toUpperCase(),n={message:d.d[t].confirm("Employee address request")},[4,this._uitilityService.openDialog(n).toPromise()];case 1:return a.sent()?[4,l=this._http.put(c.i,e).toPromise()]:[3,3];case 2:return a.sent(),this._uitilityService.showAlert(d.d[t].success("Employee Request")),[2,Promise.resolve(l)];case 3:return[2,Promise.resolve(null)];case 4:return[3,6];case 5:return r=a.sent(),[2,Promise.reject(r)];case 6:return[2]}}))}))},e.prototype.getCompanyShift=function(){return this._http.get(c.G)},e.ctorParameters=function(){return[{type:i.a},{type:r.d},{type:o.a},{type:s.a}]},e=a.__decorate([Object(l.D)({providedIn:"root"}),a.__metadata("design:paramtypes",[i.a,r.d,o.a,s.a])],e)}()},AvvH:function(e,t,n){"use strict";n.r(t),t.default=".medical_cab_symbol_option {\n  font-size: 20px;\n  color: red;\n}"},BBFz:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <app-search-filter\n          [placeholder]="\'Search by full name, id, email, cabId and contact no\'"\n          (setSearch)="setSearch($event)"\n        >\n        </app-search-filter>\n    </div>\n    <div class="flex_col_sm_5">\n        <ul class="btn_wrapper text-right">\n          <li>\n            <app-filter-count\n              [filterCount]="appliedFilterCount"\n            ></app-filter-count>\n          </li>\n          <li>\n            <button\n              mat-raised-button\n              (click)="showFilter = !showFilter"\n              color="primary"\n            >\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          </ul>\n    </div>\n    </div>\n    <div\n      class="white_wrapper filter_wrapper"\n      [class.filter_wrapper_show]="showFilter"\n    >\n      <div class="flex_row">\n        <div class="flex_col_sm_6">\n          <app-date-filter [dateObject]="filterObject.registrationDate">\n          </app-date-filter>\n        </div>\n        \x3c!-- <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.shiftType"\n          ></app-dropdown-filter>\n        </div> --\x3e\n        <div class="flex_col_sm_3">\n          <h4>\n            &nbsp;\n          </h4>\n          <mat-form-field>\n            <mat-select\n              placeholder="Shift"\n              [formControl]="filterForm.controls.shiftName"\n            >\n              \x3c!-- <mat-option *ngFor="let item of shifts" [value]="item.shiftName">{{ item.shiftName}}</mat-option> --\x3e\n              \x3c!-- changes by satyam -> Includes shift timing --\x3e \n              <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n                >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button\n                filter_btn\n                mat-stroked-button\n                [disabled]="disable()"\n                (click)="resetFilter()"\n              >\n                Reset\n              </button>\n            </li>\n    \n            <li>\n              <button\n                filter_btn\n                mat-raised-button\n                color="primary"\n                [disabled]="disable()"\n                (click)="filter()"\n              >\n                Filter\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n<table mat-table [dataSource]="newAddressRequest" class="mt-30">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef> Emp Name </th>\n        <td mat-cell *matCellDef="let element">{{element.name|checkNull}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="empId">\n        <th mat-header-cell *matHeaderCellDef> Emp Id </th>\n        <td mat-cell *matCellDef="let element">{{element.employeeId|checkNull}}</td>\n    </ng-container>\n\n    \x3c!-- Added Gender - Shivakumar A  --\x3e\n    <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.gender | checkNull}} </td>\n    </ng-container>\n    \n    <ng-container matColumnDef="email">\n        <th mat-header-cell *matHeaderCellDef> Email ID </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.email }}"> {{element?.email | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef> Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element?.mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="shiftName">\n        <th mat-header-cell *matHeaderCellDef> Shift Name</th>\n        <td mat-cell *matCellDef="let element">{{element.shift | checkNull}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="pickup">\n        <th mat-header-cell *matHeaderCellDef> Current Location </th>\n        <td mat-cell *matCellDef="let element"><span class="td-text-wrap" title="{{element?.pickup?.address?.fullAddress}}">\n                {{element?.pickup?.address?.fullAddress|checkNull}} </span></td>\n    </ng-container>\n\n    <ng-container matColumnDef="requestLOcation">\n        <th mat-header-cell *matHeaderCellDef>Requested Location</th>\n        <td mat-cell *matCellDef="let element"> <span class="td-text-wrap" title="{{element?.tempPickup?.address?.fullAddress}}">\n                {{element?.tempPickup?.address?.fullAddress|checkNull}} </span> </td>\n    </ng-container>\n\n      \x3c!-- Added Created Time  - Shivakumar A --\x3e\n<ng-container matColumnDef="createdAt">\n    <th mat-header-cell *matHeaderCellDef > Requested at </th>\n    <td mat-cell *matCellDef="let element"> {{element.requestTime | date:\'short\'}} </td>\n</ng-container>\n\n    <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu">\n                <button mat-menu-item (click)="changeStatus(\'approved\',element._id)">\n                    Approve\n                </button>\n                <button mat-menu-item (click)="changeStatus(\'rejected\',element._id)">\n                    Reject\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n\n\n<div class="white_wrapper" *ngIf="newAddressRequest.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions" (page)="changePage($event)">\n    </mat-paginator>\n</div>'},CaoY:function(e,t,n){"use strict";var a=n("mrSG"),l=n("CcnG"),r=n("Ip0R"),i=function(){function e(){}return e.prototype.ngOnInit=function(){},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object)],e.prototype,"dropdown",void 0),e=a.__decorate([Object(l.n)({selector:"app-dropdown-filter",template:a.__importDefault(n("c5r+")).default,styles:[a.__importDefault(n("utZl")).default]}),a.__metadata("design:paramtypes",[])],e)}(),o=n("seP3"),s=n("uGex"),c=n("Wf4p"),d=n("gIcY");n.d(t,"a",(function(){return m}));var m=function(){function e(){}return e=a.__decorate([Object(l.L)({declarations:[i],imports:[r.c,o.c,s.a,c.q,d.n],exports:[i]})],e)}()},Cllz:function(e,t,n){"use strict";var a=n("mrSG"),l=n("CcnG"),r=n("Ip0R"),i=function(){function e(){}return e.prototype.ngOnInit=function(){},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object)],e.prototype,"filterCount",void 0),e=a.__decorate([Object(l.n)({selector:"app-filter-count",template:a.__importDefault(n("Kbf1")).default,styles:[a.__importDefault(n("q8mc")).default]}),a.__metadata("design:paramtypes",[])],e)}();n.d(t,"a",(function(){return o}));var o=function(){function e(){}return e=a.__decorate([Object(l.L)({imports:[r.c],declarations:[i],exports:[i]})],e)}()},"Df/u":function(e,t,n){"use strict";n.r(t),t.default=".employee_detail {\n  position: relative;\n}\n.employee_detail h4 {\n  background-color: #79f2c0;\n  color: #091e42;\n  padding: 15px 10px;\n  text-align: center;\n  margin-bottom: 30px;\n  font-weight: 500;\n}\n.employee_detail .cross {\n  width: 15px;\n  height: 15px;\n  position: absolute;\n  top: 15px;\n  right: 12px;\n}\n.employee_detail .employeeListDtl {\n  padding: 0 30px 50px 30px;\n}\n.employee_detail .flex_row {\n  flex-wrap: wrap;\n}\n.employee_detail button {\n  background-color: #79f2c0;\n  color: #091e42;\n}\n.box {\n  float: left;\n  height: 20px;\n  width: 25px;\n  margin-bottom: 15px;\n  border: 1px solid black;\n  clear: both;\n}"},FaG1:function(e,t,n){"use strict";n.d(t,"a",(function(){return a}));var a={email:/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/,password:/^[^\s]+$/,name:/(.|\s)*\S(.|\s)*/,phone:"^[1-9][0-9]*$",price:/(^[0][1-9]+)|([1-9]\d*)+$/,alphaNumeric:"^[a-zA-Z0-9]+$",alphaNumericWithSpace:"^[a-zA-Z0-9 ]+$",alphabetsWithSpace:"^[a-zA-Z ]*$",onlyNumber:"^[0-9]*$",noSpace:/^\S*$/}},GcW2:function(e,t,n){"use strict";n.r(t),t.default=".medical_cab_symbol_option {\n  font-size: 20px;\n  color: red;\n}"},JQMM:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <app-search-filter\n          [placeholder]="\'Search by full name, id, cabId and contact no\'"\n          (setSearch)="setSearch($event)"\n        >\n        </app-search-filter>\n    </div>\n    <div class="flex_col_sm_5">\n        <ul class="btn_wrapper text-right">\n          <li>\n            <app-filter-count\n              [filterCount]="appliedFilterCount"\n            ></app-filter-count>\n          </li>\n          <li>\n            <button\n              mat-raised-button\n              (click)="showFilter = !showFilter"\n              color="primary"\n            >\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          </ul>\n    </div>\n    </div>\n    <div\n      class="white_wrapper filter_wrapper"\n      [class.filter_wrapper_show]="showFilter"\n    >\n      <div class="flex_row">\n        <div class="flex_col_sm_6">\n          <app-date-filter [dateObject]="filterObject.registrationDate">\n          </app-date-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.shiftType"\n          ></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <h4>\n            &nbsp;\n          </h4>\n          <mat-form-field>\n            <mat-select\n              placeholder="Shift"\n              [formControl]="filterForm.controls.shiftName"\n            >\n              \x3c!-- <mat-option *ngFor="let item of shifts" [value]="item.shiftName">{{ item.shiftName}}</mat-option> --\x3e\n              \x3c!-- changes by satyam -> Includes shift timing --\x3e \n              <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n                >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button\n                filter_btn\n                mat-stroked-button\n                [disabled]="disable()"\n                (click)="resetFilter()"\n              >\n                Reset\n              </button>\n            </li>\n    \n            <li>\n              <button\n                filter_btn\n                mat-raised-button\n                color="primary"\n                [disabled]="disable()"\n                (click)="filter()"\n              >\n                Filter\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n<table mat-table [dataSource]="noshow" class="mt-30">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef> Full Name </th>\n        <td mat-cell *matCellDef="let element"> {{element?.route?.employees?.name | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="employeeId">\n        <th mat-header-cell *matHeaderCellDef> Emp ID </th>\n        <td mat-cell *matCellDef="let element"> {{element?.route?.employees?.employeeId | checkNull}} </td>\n    </ng-container>\n\n     \x3c!-- Added Gender - Shivakumar A  --\x3e\n     <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.route?.employees?.gender | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef> Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element?.route?.employees?.mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="cabid">\n        <th mat-header-cell *matHeaderCellDef> Cab ID </th>\n        \x3c!-- <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.cabBadge | checkNull}} </td> --\x3e\n        <td mat-cell *matCellDef="let element"> {{element?.cab?.routeNo}} \n             \x3c!-- Added Medical cab - Shivakumar A --\x3e\n        <b class="medical_cab_symbol_option" *ngIf="element?.cab?.type === medicalCabValue">&#43;</b>\n        </td>\n    </ng-container>\n\n    \x3c!-- <ng-container matColumnDef="scheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Scheduled For </th>\n        <td mat-cell *matCellDef="let element"> {{element.scheduleTime | customDate}} </td>\n    </ng-container> --\x3e\n\n    <ng-container matColumnDef="scheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Scheduledfor </th>\n        <td mat-cell *matCellDef="let element"> {{element?.rosterDate | customDate}} {{element?.route?.shiftTime}} </td>\n    </ng-container>\n\n    \x3c!-- <ng-container matColumnDef="cabtime">\n        <th mat-header-cell *matHeaderCellDef> Cab Timmings </th>\n        <td mat-cell *matCellDef="let element"> {{element.tripdate}} </td>\n    </ng-container> --\x3e\n\n    <ng-container matColumnDef="pickup">\n        <th mat-header-cell *matHeaderCellDef> Pickup Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.route?.employees?.address }}"> {{element?.route?.employees?.address | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="dropoff">\n        <th mat-header-cell *matHeaderCellDef> DropOff Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.officeAddress }}"> {{element?.officeAddress | checkNull}} </td>\n    </ng-container>\n\n    \x3c!--  Added ShiftType - Shivakumar A --\x3e\n    <ng-container matColumnDef="shifttype">\n        <th mat-header-cell *matHeaderCellDef> Shift Type </th>\n        <td mat-cell *matCellDef="let element"> \n            {{element?.route?.shiftType | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="noshowreason">\n        <th mat-header-cell *matHeaderCellDef>Reason For No Show </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.route?.employees?.noShowReason }}" > {{element?.route?.employees?.noShowReason | checkNull}} </td>\n    </ng-container>\n\n<ng-container matColumnDef="createdAt">\n    <th mat-header-cell *matHeaderCellDef > Marked at </th>\n    <td mat-cell *matCellDef="let element"> {{element?.route?.employees?.noshowedAt | date:\'short\'}} </td>\n</ng-container>\n\n\n    \x3c!-- Symbol Column --\x3e\n    \x3c!-- <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu">\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Delete">delete</mat-icon> Delete\n                </button>\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n                </button>\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Blocked">block</mat-icon>\n                    Block\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container> --\x3e\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n\n\n<div class="white_wrapper" *ngIf="noshow.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n    </mat-paginator>\n</div>'},Kbf1:function(e,t,n){"use strict";n.r(t),t.default='<div class="btn filter-count"> <span>{{filterCount}}</span> filter applied</div>\n'},LeMo:function(e,t,n){"use strict";n.r(t),t.default=".mat-menu-item .mat-icon {\n  top: 4px;\n}\n\ntd.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n  min-width: 100px;\n  width: 100px;\n}"},Ln33:function(e,t,n){"use strict";n.r(t),t.default=".btn-more-menu {\n  background: transparent;\n}\n\n.btn-more-menu .mat-icon {\n  padding-top: 4px;\n}\n\ntd.mat-cell, td.mat-footer-cell, th.mat-header-cell {\n  width: 200px;\n}"},O21H:function(e,t,n){"use strict";n.r(t);var a=n("mrSG"),l=n("CcnG"),r=n("Ip0R"),i=n("8Js9"),o=n("RzZf"),s=function(e){function t(t){var n=e.call(this)||this;return n.request_list_service=t,n}return a.__extends(t,e),t.prototype.ngOnInit=function(){var e=this;this.request_list_service.TotalPendingData.subscribe((function(t){return e.TotalPendingData=t}))},t.prototype.tabRefresh=function(e){var t=this;this.cancelledTabChange=!1,this.rescheduledTabChange=!1,this.sosTabChange=!1,this.otherTabChange=!1,this.addressTabChange=!1,this.noShowTabChange=!1;var n=a.__assign({},this.validPageOptions);0==e.index?(this.cancelledTabChange=!0,this.request_list_service.TotalPendingData.subscribe((function(e){return t.TotalPendingData=e}))):1==e.index?(this.rescheduledTabChange=!0,this.request_list_service.getCancelledRequests(n).subscribe((function(e){t.request_list_service.changeMessageData(e.data)}))):2==e.index?(this.sosTabChange=!0,this.request_list_service.getCancelledRequests(n).subscribe((function(e){t.request_list_service.changeMessageData(e.data)}))):3==e.index?(this.addressTabChange=!0,this.request_list_service.getCancelledRequests(n).subscribe((function(e){t.request_list_service.changeMessageData(e.data)}))):4==e.index?(this.otherTabChange=!0,this.request_list_service.getCancelledRequests(n).subscribe((function(e){t.request_list_service.changeMessageData(e.data)}))):5==e.index&&(this.noShowTabChange=!0,this.request_list_service.getCancelledRequests(n).subscribe((function(e){t.request_list_service.changeMessageData(e.data)})))},t.ctorParameters=function(){return[{type:i.a}]},t=a.__decorate([Object(l.n)({selector:"app-requests-list",template:a.__importDefault(n("6DF+")).default,styles:[a.__importDefault(n("dXe9")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),c=n("ZYCi"),d=n("La40"),m=n("UodH"),u=n("uGex"),p=n("RrX5"),h=n("CaoY"),f=n("MzSu"),g=n("Cllz"),b=n("b716"),_=n("BHnd"),v=n("SMsm"),C=n("v9Dh"),D=n("4epT"),y=n("OkvK"),x=n("jQLj"),w=n("Wf4p"),S=n("mVsa"),F=n("yG5I"),O=n("F/us"),k=n("f0Wu"),A=function(e){function t(t){var n=e.call(this)||this;return n._requestList=t,n.displayedColumns=["position","name","empId","gender","email","contact","cabid","scheduledfor","pickup","dropoff","shifttype","cancellreason","createdAt"],n.cancelled=new _.a([]),n.appliedFilterCount=0,n.isFilterApplied=!1,n.medicalCabValue=F.a[4].viewValue,n.createFilterForm(),n.filterObject=n._requestList.createFilterObject(n.filterForm),n}return a.__extends(t,e),Object.defineProperty(t.prototype,"isCancelledTab",{set:function(e){e&&this.getCancelledRequest()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.total=0,this.getCancelledRequest(),this.getShifts()},t.prototype.getCancelledRequest=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions,{FromCancelled:!0});this._requestList.getCancelledRequests(t).subscribe((function(t){e.cancelled.data=t.data.rescheduleList,e.total=t.data.totalCount,e.TotalPendingData=t.data,e._requestList.changeMessageData(e.TotalPendingData)}),(function(e){}))},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getCancelledRequest()},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getCancelledRequest()},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.setTime=function(e){return k.utc(e,"HH:mm:ss").tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format("hh:mm A")},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getCancelledRequest()},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getCancelledRequest(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value),t=O.filter(e,(function(e){return null!=e}));this.resetPages(),this.getCancelledRequest(),this.appliedFilterCount=t.length,this.isFilterApplied=!0},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isCancelledTab",null),t=a.__decorate([Object(l.n)({selector:"app-cancelled",template:a.__importDefault(n("gGSm")).default,styles:[a.__importDefault(n("GcW2")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),T=function(e){function t(t){var n=e.call(this)||this;return n._requestList=t,n.showFilter=!1,n.appliedFilterCount=0,n.isFilterApplied=!1,n.otherRequests=new _.a([]),n.displayedColumns=["position","name","empId","gender","email","contact","userType","message","createdAt"],n.createFilterForm(),n.filterObject=n._requestList.createFilterObject(n.filterForm),n}return a.__extends(t,e),Object.defineProperty(t.prototype,"isOtherTab",{set:function(e){e&&this.getAllOtherrequest()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.getShifts()},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.getAllOtherrequest=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions);this._requestList.getAllOtherRequests(t).subscribe((function(t){e.otherRequests.data=t.data.userList,e.total=t.data.totalCount}),(function(e){}))},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getAllOtherrequest()},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getAllOtherrequest()},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getAllOtherrequest()},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getAllOtherrequest(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value).filter(Boolean);this.resetPages(),this.getAllOtherrequest(),this.appliedFilterCount=e.length,this.isFilterApplied=!0},t.prototype.changeStatus=function(e,t){return a.__awaiter(this,void 0,void 0,(function(){return a.__generator(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this._requestList.changeOtherRequestStatus({status:e,userId:t})];case 1:return n.sent()&&this.getAllOtherrequest(),[3,3];case 2:return n.sent(),[3,3];case 3:return[2]}}))}))},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isOtherTab",null),t=a.__decorate([Object(l.n)({selector:"app-other-requests",template:a.__importDefault(n("YjT9")).default,styles:[a.__importDefault(n("Ln33")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),q=function(e){function t(t){var n=e.call(this)||this;return n._requestList=t,n.showFilter=!1,n.appliedFilterCount=0,n.isFilterApplied=!1,n.sosRequests=new _.a([]),n.displayedColumns=["position","name","empId","gender","contact","cabid","cabReg","driverName","driverPhone","pickup","dropoff","sosLocation","status","createdAt","action"],n.createFilterForm(),n.filterObject=n._requestList.createFilterObject(n.filterForm),n.medicalCabValue=F.a[4].viewValue,n}return a.__extends(t,e),Object.defineProperty(t.prototype,"isSosTab",{set:function(e){e&&this.getAllSos()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.getShifts()},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.getAllSos=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions);this._requestList.getAllSosRequests(t).subscribe((function(t){e.sosRequests.data=t.data.userList,e.total=t.data.totalCount}),(function(e){}))},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getAllSos()},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getAllSos()},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getAllSos()},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getAllSos(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value).filter(Boolean);this.resetPages(),this.getAllSos(),this.appliedFilterCount=e.length,this.isFilterApplied=!0},t.prototype.changeStatus=function(e,t){return a.__awaiter(this,void 0,void 0,(function(){var n,l=this;return a.__generator(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),n=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions),[4,this._requestList.changeSosStatus({status:e,userId:t})];case 1:return r.sent()&&(this.getAllSos(),this._requestList.getCancelledRequests(n).subscribe((function(e){l._requestList.changeMessageData(e.data)}))),[3,3];case 2:return r.sent(),[3,3];case 3:return[2]}}))}))},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isSosTab",null),t=a.__decorate([Object(l.n)({selector:"app-sos",template:a.__importDefault(n("Vj21")).default,styles:[a.__importDefault(n("pUTM")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),N=n("o3x0"),R=function(e){function t(t,n,a){var l=e.call(this)||this;return l.dialogRef=t,l.data=n,l._RequestListService=a,l.vendors=[],l.cabs=[],l.cabPlaceholder="Select Cab",l.createForm(),l}return a.__extends(t,e),t.prototype.ngOnInit=function(){this.getAllVendor()},t.prototype.createForm=function(){this.cabForm=this._RequestListService.createCabForm()},t.prototype.getControl=function(e){return this.cabForm.controls[e]},t.prototype.getAllVendor=function(){var e=this;this._RequestListService.searchVendor().subscribe((function(t){t&&200==t.statusCode&&(e.vendors=t.data)}))},t.prototype.selectVendor=function(e){this.employees=null,this.selectedVendorId=e,this.getCabs()},t.prototype.getCabs=function(){var e=this,t={vendorId:this.selectedVendorId,shiftTime:this.data.shiftTime,shiftType:this.data.shiftType,rosterDate:this.data.rosterDate};console.log(this.data),this._RequestListService.getCabsForRoster(t).subscribe((function(t){console.log(t),t&&t.data.length?(e.cabPlaceholder="Select Cab",e.cabs=t.data):(e.cabPlaceholder="No Cab Found",e.cabs=[])}))},t.prototype.selectCab=function(e){this.selectedCabId=e.cabId,this.cabDriverId=e.driverId,this.employees=null,this.rosterId="",e.rosterId&&(this.rosterId=e.rosterId),e.employees&&(this.employees=e.employees)},t.prototype.approve=function(){var e=this,t=a.__assign({},this.cabForm.value);this.cabForm.invalid||this.cabForm.disabled||(t.rescheduleId=this.data.rescheduleId,t.cabId=this.selectedCabId,t.driverId=this.cabDriverId,this.rosterId&&(t.rosterId=this.rosterId),this.cabForm.disable(),this._RequestListService.approveRequest(t).subscribe((function(t){t&&e.dialogRef.close(!0)}),(function(t){e.cabForm.enable()})))},t.prototype.onNoClick=function(){this.dialogRef.close()},t.ctorParameters=function(){return[{type:N.e},{type:void 0,decorators:[{type:l.C,args:[N.a]}]},{type:i.a}]},t=a.__decorate([Object(l.n)({selector:"app-assign-vendor-cab",template:a.__importDefault(n("Rq2H")).default,styles:[a.__importDefault(n("Df/u")).default]}),a.__param(1,Object(l.C)(N.a)),a.__metadata("design:paramtypes",[N.e,Object,i.a])],t)}(o.a),P=function(e){function t(t,n){var a=e.call(this)||this;return a._requestList=t,a.dialog=n,a.displayedColumns=["position","name","empid","gender","email","cabid","rescheduledfor","currentShift","requestedShift","tripType","pickup","dropoff","cancellreason","createdAt","action"],a.rescheduled=new _.a([]),a.appliedFilterCount=0,a.isFilterApplied=!1,a.medicalCabValue=F.a[4].viewValue,a.createFilterForm(),a.filterObject=a._requestList.createFilterObject(a.filterForm),a}return a.__extends(t,e),Object.defineProperty(t.prototype,"isRescheduledTab",{set:function(e){e&&this.getRescheduleRequest()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.getShifts(),this.date=(new k).startOf("day").format("x"),console.log(this.date)},t.prototype.getRescheduleRequest=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions,{status:4});this._requestList.getRescheduleRequests(t).subscribe((function(t){e.rescheduled.data=t.data.rescheduleList,console.log(e.rescheduled.data),e.total=t.data.totalCount}),(function(e){}))},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getRescheduleRequest()},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getRescheduleRequest()},t.prototype.openDetailDialog=function(e){var t=this;if(!e.rosterFound){var n={shiftTime:e.shiftTime,shiftType:e.shiftType,totalTripTime:e.roster.route.totalTripTime,rescheduleId:e._id,rosterDate:e.scheduleTime},l=new N.c;l.width="500px",l.data=n,this.dialog.open(R,l).afterClosed().subscribe((function(e){if(e){var n=a.__assign({},t.validPageOptions);t.getRescheduleRequest(),t._requestList.getCancelledRequests(n).subscribe((function(e){t._requestList.changeMessageData(e.data)}))}}))}},t.prototype.changeStatus=function(e,t){return a.__awaiter(this,void 0,void 0,(function(){return a.__generator(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,this._requestList.approveRescheduleRequest({status:e,obj:t})];case 1:return n.sent()&&this.getRescheduleRequest(),[3,3];case 2:return n.sent(),[3,3];case 3:return[2]}}))}))},t.prototype.cancel=function(e,t){return a.__awaiter(this,void 0,void 0,(function(){var n;return a.__generator(this,(function(a){switch(a.label){case 0:n={rescheduleId:t._id},a.label=1;case 1:return a.trys.push([1,3,,4]),[4,this._requestList.approveRescheduleRequest({status:e,obj:n})];case 2:return a.sent()&&this.getRescheduleRequest(),[3,4];case 3:return a.sent(),[3,4];case 4:return[2]}}))}))},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.setTime=function(e){return k.utc(e,"HH:mm:ss").tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format("hh:mm A")},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getRescheduleRequest()},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getRescheduleRequest(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value),t=O.filter(e,(function(e){return null!=e}));this.resetPages(),this.getRescheduleRequest(),this.appliedFilterCount=t.length,this.isFilterApplied=!0},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a},{type:N.b}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isRescheduledTab",null),t=a.__decorate([Object(l.n)({selector:"app-reschedule",template:a.__importDefault(n("+ljL")).default,styles:[a.__importDefault(n("oit+")).default]}),a.__metadata("design:paramtypes",[i.a,N.b])],t)}(o.a),I=function(e){function t(t){var n=e.call(this)||this;return n._requestList=t,n.displayedColumns=["position","name","employeeId","gender","contact","cabid","scheduledfor","pickup","dropoff","shifttype","noshowreason","createdAt"],n.noshow=new _.a([]),n.appliedFilterCount=0,n.isFilterApplied=!1,n.medicalCabValue=F.a[4].viewValue,n.createFilterForm(),n.filterObject=n._requestList.createFilterObject(n.filterForm),n}return a.__extends(t,e),Object.defineProperty(t.prototype,"isNoShowTab",{set:function(e){e&&this.getAllnoShow()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.getShifts()},t.prototype.getAllnoShow=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions);this._requestList.getNoShowRequests(t).subscribe((function(t){e.noshow.data=t.data.noshowList,e.total=t.data.totalCount,e.TotalPendingData=t.data}),(function(e){}))},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getAllnoShow()},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getAllnoShow()},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.setTime=function(e){return k.utc(e,"HH:mm:ss").tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format("hh:mm A")},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getAllnoShow()},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getAllnoShow(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value),t=O.filter(e,(function(e){return null!=e}));this.resetPages(),this.getAllnoShow(),this.appliedFilterCount=t.length,this.isFilterApplied=!0},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isNoShowTab",null),t=a.__decorate([Object(l.n)({selector:"app-no-show",template:a.__importDefault(n("JQMM")).default,styles:[a.__importDefault(n("AvvH")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),j=n("gIcY"),L=n("9sDP"),H=function(){function e(){}return e.prototype.transform=function(e){var t;return 0===e?t="Pending":1===e?t="Resolved":2===e?t="Cancelled":3===e?t="Marksafe":4===e?t="Pending":5===e&&(t="Rejected"),t},e=a.__decorate([Object(l.W)({name:"requestStatus"})],e)}(),B=function(){function e(){}return e=a.__decorate([Object(l.L)({declarations:[H],imports:[r.c],exports:[H]})],e)}(),E=n("gdGC"),M=n("faKS"),G=n("FpXt"),z=n("3V+5"),V=function(e){function t(t){var n=e.call(this)||this;return n._requestList=t,n.displayedColumns=["position","name","empId","gender","email","contact","shiftName","pickup","requestLOcation","createdAt","action"],n.newAddressRequest=new _.a([]),n.appliedFilterCount=0,n.isFilterApplied=!1,n.createFilterForm(),n.filterObject=n._requestList.createFilterObject(n.filterForm),n}return a.__extends(t,e),Object.defineProperty(t.prototype,"isAddressTab",{set:function(e){e&&this.getAddressRequest()},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.getShifts()},t.prototype.getAddressRequest=function(){var e=this,t=a.__assign({},this.changeDateFormat(this.filterForm.value),this.validPageOptions,{userType:1,isAddressChangeReq:!0});this._requestList.getUpdatedAddressRequest(t).subscribe((function(t){e.newAddressRequest.data=t.data.userList,e.newAddressRequest.data.forEach((function(e){var t="";e.tempPickup.address.houseNo&&(t=t.concat(e.tempPickup.address.houseNo)),e.tempPickup.address.roadName&&(0!==t.length&&(t=t.concat(",")),t=t.concat(e.tempPickup.address.roadName)),e.tempPickup.address.city&&(0!==t.length&&(t=t.concat(",")),t=t.concat(e.tempPickup.address.city)),e.tempPickup.address.state&&(0!==t.length&&(t=t.concat(",")),t=t.concat(e.tempPickup.address.state)),e.tempPickup.address.landMark&&(0!==t.length&&(t=t.concat(",")),t=t.concat(e.tempPickup.address.landMark)),e.tempPickup.address.fullAddress=t})),e.total=t.data.totalCount}),(function(e){}))},t.prototype.sortData=function(e){this.sortOptions=e,this.resetPages(),this.getAddressRequest()},t.prototype.changePage=function(e){this.pageOptionsOnChange=e,0!=this.total&&this.getAddressRequest()},t.prototype.changeStatus=function(e,t){return a.__awaiter(this,void 0,void 0,(function(){var n,l,r=this;return a.__generator(this,(function(i){switch(i.label){case 0:n={actionType:e,empId:t},i.label=1;case 1:return i.trys.push([1,3,,4]),l=a.__assign({},this.validPageOptions),[4,this._requestList.changeStatus(n)];case 2:return i.sent()&&(this.getAddressRequest(),this._requestList.getCancelledRequests(l).subscribe((function(e){r._requestList.changeMessageData(e.data)}))),[3,4];case 3:return i.sent(),[3,4];case 4:return[2]}}))}))},t.prototype.createFilterForm=function(){this.filterForm=this._requestList.getFilterForm()},t.prototype.setTime=function(e){return k.utc(e,"HH:mm:ss").tz(Intl.DateTimeFormat().resolvedOptions().timeZone).format("hh:mm A")},t.prototype.disable=function(){return!this.filterForm.dirty},t.prototype.setSearch=function(e){this.search=e,this.resetPages(),this.getAddressRequest()},t.prototype.resetFilter=function(){this.filterForm.reset(),this.resetPages(),this.getAddressRequest(),this.appliedFilterCount=0,this.isFilterApplied=!1},t.prototype.filter=function(){var e=Object.values(this.filterForm.value),t=O.filter(e,(function(e){return null!=e}));this.resetPages(),this.getAddressRequest(),this.appliedFilterCount=t.length,this.isFilterApplied=!0},t.prototype.getShifts=function(){var e=this;this._requestList.getCompanyShift().subscribe((function(t){e.shifts=t.data.shiftSlot}),(function(e){}))},t.ctorParameters=function(){return[{type:i.a}]},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object),a.__metadata("design:paramtypes",[Object])],t.prototype,"isAddressTab",null),t=a.__decorate([Object(l.n)({selector:"app-address-change-request",template:a.__importDefault(n("BBFz")).default,styles:[a.__importDefault(n("LeMo")).default]}),a.__metadata("design:paramtypes",[i.a])],t)}(o.a),$=n("6Wmm");n.d(t,"RequestsListModule",(function(){return W}));var U=[{path:"",component:s}],W=function(){function e(){}return e=a.__decorate([Object(l.L)({imports:[r.c,G.a,c.e.forChild(U),d.a,m.a,b.b,_.b,v.a,C.a,D.a,y.a,x.a,w.n,S.a,j.n,L.a,B,E.a,M.a,u.a,z.a,$.a,p.a,h.a,E.a,f.a,g.a],declarations:[s,A,V,T,q,P,I,R],providers:[i.a],entryComponents:[R]})],e)}()},Rq2H:function(e,t,n){"use strict";n.r(t),t.default='<div class="employee_detail">\n  <h4>Assign Vendor and Cab</h4>\n  <img src="./assets/images/cross.svg" class="cross" (click)="onNoClick()" />\n  \x3c!-- crf issue resolved -- satyam --\x3e\n  <form [formGroup]="cabForm" #form="ngForm" >\n    <div class="employeeListDtl">\n      <div class="flex_row">\n        <div class="flex_col_sm_5">\n          <mat-label>Select Vendor</mat-label>\n          <mat-form-field appearance="outline">\n            <mat-select formControlName="vendorId" (selectionChange)="selectVendor($event.value)"\n              placeholder="Select Vendor">\n              <mat-option *ngFor="let vendor of vendors" [value]="vendor._id">\n                {{vendor.name}}\n              </mat-option>\n            </mat-select>\n            <mat-error>\n              {{getControl(\'vendorId\')|validate:\'Vendor\'}}\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class="flex_col_sm_5">\n          <mat-label>Select Cab</mat-label>\n          <mat-form-field appearance="outline">\n            <mat-select formControlName="cabId" [placeholder]="cabPlaceholder"\n              (selectionChange)="selectCab($event.value)">\n              <mat-option *ngFor="let cab of cabs" [value]="cab">\n                {{cab.routeNo}}\n              </mat-option>\n            </mat-select>\n            <mat-error>\n              {{getControl(\'cabId\')|validate:\'Cab\'}}\n            </mat-error>\n          </mat-form-field>\n\n        </div>\n      </div>\n      <div *ngIf="employees">\n        Employee Order :-\n        <div  class="flex_row" >\n          <div *ngFor="let employee of employees" style="margin-top: 10px; margin-left: 10px" >\n            <div class="box text-center" *ngIf="employee.gender==\'female\'" style="background-color: rgb(229, 104, 148, 1);">\n                F\n            </div>\n            <div class="box text-center" *ngIf="employee.gender==\'male\'" style="background-color: rgb(70, 170, 202, 1);">\n              M\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class="flex_row" style="margin-top: 20px;">\n        <div class="flex_col_sm_10">\n          <ul class="btn_wrapper text-center">\n            <li> <button mat-raised-button color="primary" (click)="onNoClick()"> Cancel</button> </li>\n            \x3c!-- crf issue resolved -- satyam --\x3e\n            <li> <button mat-raised-button color="primary" (click)="approve()">\n                Done\n              </button> </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </form>\n</div>'},RrX5:function(e,t,n){"use strict";var a=n("mrSG"),l=n("CcnG"),r=n("Ip0R"),i=function(){function e(){this.maxDate=new Date}return e.prototype.ngOnInit=function(){var e=this;!0===this.dateObject.fromDetails&&(this.maxDate=null),this.minDateSubscriber=this.dateObject.fromDate.valueChanges.subscribe((function(t){t||(e.minDate=null)}))},e.prototype.dateChange=function(e){var t=e.value,n=new Date(t);this.minDate=new Date(n.getFullYear(),n.getMonth(),n.getDate()),this.dateObject.toDate.setValue(null)},e.prototype.setToDate=function(){if(this.dateObject.toDate.value){var e=new Date(this.dateObject.toDate.value);e.setHours(23),e.setMinutes(59),e.setSeconds(59),this.dateObject.toDate.setValue(e)}},e.prototype.ngOnDestroy=function(){this.minDateSubscriber.unsubscribe()},a.__decorate([Object(l.G)(),a.__metadata("design:type",Object)],e.prototype,"dateObject",void 0),e=a.__decorate([Object(l.n)({selector:"app-date-filter",template:a.__importDefault(n("qpK1")).default,styles:[a.__importDefault(n("T1hN")).default]}),a.__metadata("design:paramtypes",[])],e)}(),o=n("Wf4p"),s=n("jQLj"),c=n("seP3"),d=n("b716"),m=n("SMsm"),u=n("gIcY");n.d(t,"a",(function(){return p}));var p=function(){function e(){}return e=a.__decorate([Object(l.L)({declarations:[i],imports:[u.n,r.c,o.n,s.a,c.c,d.b,m.a],exports:[i]})],e)}()},T1hN:function(e,t,n){"use strict";n.r(t),t.default='h4 {\n  font-weight: 500;\n  line-height: 19.5px;\n  font-family: "Segoe UI";\n  color: #091e42;\n}'},Vj21:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <app-search-filter\n          [placeholder]="\'Search by full name, id, email, cabId and contact no\'"\n          (setSearch)="setSearch($event)"\n        >\n        </app-search-filter>\n    </div>\n    <div class="flex_col_sm_5">\n        <ul class="btn_wrapper text-right">\n          <li>\n            <app-filter-count\n              [filterCount]="appliedFilterCount"\n            ></app-filter-count>\n          </li>\n          <li>\n            <button\n              mat-raised-button\n              (click)="showFilter = !showFilter"\n              color="primary"\n            >\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          </ul>\n    </div>\n    </div>\n    <div\n      class="white_wrapper filter_wrapper"\n      [class.filter_wrapper_show]="showFilter"\n    >\n      <div class="flex_row">\n        <div class="flex_col_sm_6">\n          <app-date-filter [dateObject]="filterObject.registrationDate">\n          </app-date-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.shiftType"\n          ></app-dropdown-filter>\n        </div>\n        <div class="flex_col_sm_3">\n          <h4>\n            &nbsp;\n          </h4>\n          <mat-form-field>\n            <mat-select\n              placeholder="Shift"\n              [formControl]="filterForm.controls.shiftName"\n            >\n              \x3c!-- <mat-option *ngFor="let item of shifts" [value]="item.shiftName">{{ item.shiftName}}</mat-option> --\x3e\n              \x3c!-- changes by satyam -> Includes shift timing --\x3e \n              <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n                >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </div>\n      <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button\n                filter_btn\n                mat-stroked-button\n                [disabled]="disable()"\n                (click)="resetFilter()"\n              >\n                Reset\n              </button>\n            </li>\n    \n            <li>\n              <button\n                filter_btn\n                mat-raised-button\n                color="primary"\n                [disabled]="disable()"\n                (click)="filter()"\n              >\n                Filter\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n<table mat-table [dataSource]="sosRequests" class="mt-30" matSort (matSortChange)="sortData($event)">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef> Employee Name </th>\n        <td mat-cell *matCellDef="let element"> {{element.name | checkNull}} </td>\n    </ng-container>\n\n     \x3c!-- Added Emp ID - Shivakumar A  --\x3e\n     <ng-container matColumnDef="empId">\n        <th mat-header-cell *matHeaderCellDef> ID </th>\n        <td mat-cell *matCellDef="let element">\n            <span *ngIf="element.employeeId">{{element.employeeId|checkNull}}</span>\n            <span *ngIf="element.driverId">{{element.driverId|checkNull}}</span>\n            </td>\n    </ng-container>\n\n    \x3c!-- Added Gender - Shivakumar A  --\x3e\n    <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.gender | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef> Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element.mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="cabid">\n        <th mat-header-cell *matHeaderCellDef> Cab ID </th>newCabBadgeId\n        \x3c!-- <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.cabBadge | checkNull}} </td> --\x3e\n        \x3c!-- Added newCabBadgeId - Shivakumar A --\x3e\n        <td mat-cell *matCellDef="let element"> {{element?.newCabBadgeId | checkNull}} \n             \x3c!-- Added Medical cab - Shivakumar A --\x3e\n        <b class="medical_cab_symbol_option" *ngIf="element?.roster?.cab?.type === medicalCabValue">&#43;</b>\n        </td>\n    </ng-container>\n\n    <ng-container matColumnDef="cabReg">\n        <th mat-header-cell *matHeaderCellDef> Cab Registration No </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.registrationNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="driverName">\n        <th mat-header-cell *matHeaderCellDef> Driver Name </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.driverMapped[0].name | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="driverPhone">\n        <th mat-header-cell *matHeaderCellDef>Driver Contact Number</th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.driverMapped[0].mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="pickup">\n        <th mat-header-cell *matHeaderCellDef> Pickup Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.pickUpLocation }}"> {{element?.pickUpLocation | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="dropoff">\n        <th mat-header-cell *matHeaderCellDef> DropOff Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.roster?.officeAddress }}"> {{element?.roster?.officeAddress | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="sosLocation">\n        <th mat-header-cell *matHeaderCellDef>Sos Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.roster?.officeAddress }}" >\n            <a href="https://www.google.com/maps/search/?api=1&query={{element?.sosLocation?.coordinates[1]}},{{element?.sosLocation?.coordinates[0]}}"\n                target="_blank">\n                {{element?.sosLocation?.address | checkNull}}\n            </a></td>\n    </ng-container>\n\n    \x3c!-- Removed Messages -  Shivakumar A --\x3e\n\n    \x3c!-- <ng-container matColumnDef="message">\n        <th mat-header-cell *matHeaderCellDef>Message </th>\n        <td mat-cell *matCellDef="let element"> {{element?.query | checkNull}} </td>\n    </ng-container> --\x3e\n\n    <ng-container matColumnDef="status">\n        <th mat-header-cell *matHeaderCellDef>Status </th>\n        <td mat-cell *matCellDef="let element"> {{element?.status |requestStatus | checkNull}} </td>\n    </ng-container>\n\n    \x3c!-- Added Created Time -  Shivakumar A --\x3e\n    <ng-container matColumnDef="createdAt">\n        <th mat-header-cell *matHeaderCellDef> Raised At </th>\n        <td mat-cell *matCellDef="let element"> {{element?.created | date:\'short\'}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n          \x3c!-- marksafed -- satyam --\x3e\n            \x3c!-- <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu"\n                [disabled]="element?.status==1 || element?.status==5">\n                <mat-icon>more_vert</mat-icon>\n            </button> --\x3e\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu"\n                [disabled]="element?.status==1 || element?.status==5 || element?.status==3">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu" xPosition="before">\n                \x3c!-- <button mat-menu-item (click)="changeStatus(\'reject\',element._id)">\n                    <mat-icon matTooltip="Delete">delete</mat-icon> Reject\n                </button> --\x3e\n                <button mat-menu-item (click)="changeStatus(\'resolve\',element._id)">\n                    <mat-icon matTooltip="Resolve">check</mat-icon> Resolve\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n<div class="white_wrapper" *ngIf="sosRequests.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n    </mat-paginator>\n</div>'},YjT9:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n    <div class="flex_col_sm_5 rowFilterBox">\n        <app-search-filter\n          [placeholder]="\'Search by full name, id, email, cabId and contact no\'"\n          (setSearch)="setSearch($event)"\n        >\n        </app-search-filter>\n    </div>\n    <div class="flex_col_sm_5">\n        <ul class="btn_wrapper text-right">\n          <li>\n            <app-filter-count\n              [filterCount]="appliedFilterCount"\n            ></app-filter-count>\n          </li>\n          <li>\n            <button\n              mat-raised-button\n              (click)="showFilter = !showFilter"\n              color="primary"\n            >\n              <mat-icon>filter_list</mat-icon> Filter\n            </button>\n          </li>\n          </ul>\n    </div>\n    </div>\n    <div\n      class="white_wrapper filter_wrapper"\n      [class.filter_wrapper_show]="showFilter"\n    >\n      <div class="flex_row">\n        <div class="flex_col_sm_6">\n          <app-date-filter [dateObject]="filterObject.registrationDate">\n          </app-date-filter>\n        </div>\n         <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.userType"\n          ></app-dropdown-filter>\n        </div>\n        \x3c!-- <div class="flex_col_sm_3">\n          <app-dropdown-filter\n            [dropdown]="filterObject.shiftType"\n          ></app-dropdown-filter>\n        </div> --\x3e\n        \x3c!-- <div class="flex_col_sm_3">\n          <h4>\n            &nbsp;\n          </h4>\n          <mat-form-field>\n            <mat-select\n              placeholder="Shift"\n              [formControl]="filterForm.controls.shiftName"\n            >\n              <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n                >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div> --\x3e\n      </div>\n      <div class="flex_row">\n        <div class="flex_col_sm_10 text-center">\n          <ul class="btn_wrapper">\n            <li>\n              <button\n                filter_btn\n                mat-stroked-button\n                [disabled]="disable()"\n                (click)="resetFilter()"\n              >\n                Reset\n              </button>\n            </li>\n    \n            <li>\n              <button\n                filter_btn\n                mat-raised-button\n                color="primary"\n                [disabled]="disable()"\n                (click)="filter()"\n              >\n                Filter\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n<table mat-table [dataSource]="otherRequests" class="mt-30">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef>Name </th>\n        <td mat-cell *matCellDef="let element"> {{element.name | checkNull}} </td>\n    </ng-container>\n\n     \x3c!-- Added Emp ID - Shivakumar A  --\x3e\n     <ng-container matColumnDef="empId">\n        <th mat-header-cell *matHeaderCellDef> ID </th>\n        <td mat-cell *matCellDef="let element">\n            <span *ngIf="element.employeeId">{{element.employeeId|checkNull}}</span>\n            <span *ngIf="element.driverId">{{element.driverId|checkNull}}</span>\n            </td>\n    </ng-container>\n    \x3c!-- Added Gender - Shivakumar A  --\x3e\n    <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.gender | checkNull}} </td>\n    </ng-container>\n    \n    <ng-container matColumnDef="email">\n        <th mat-header-cell *matHeaderCellDef>Email ID </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.email }}"> {{element.email | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef>Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element.mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="userType">\n        <th mat-header-cell *matHeaderCellDef>User Type</th>\n        <td mat-cell *matCellDef="let element"> \n            <span *ngIf="element.employeeId">Employee</span>\n            <span *ngIf="element.driverId">Driver</span></td>\n    </ng-container>\n\n    <ng-container matColumnDef="message">\n        <th mat-header-cell *matHeaderCellDef >Message </th>\n        <td mat-cell *matCellDef="let element" matTooltip="{{element.query | checkNull}}"> {{element.query | checkNull}} </td>\n    </ng-container>\n    \n    \x3c!-- Added Created Time  - Shivakumar A --\x3e\n    <ng-container matColumnDef="createdAt">\n        <th mat-header-cell *matHeaderCellDef >Requested at </th>\n        <td mat-cell *matCellDef="let element"> {{element.created | date:\'short\'}} </td>\n    </ng-container>\n\n    \x3c!-- Removed Action Button - Shivakumar A --\x3e\n\n    \x3c!-- <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu" xPosition="before">\n                <button mat-menu-item (click)="changeStatus(\'reject\',element._id)">\n                    <mat-icon matTooltip="Delete">delete</mat-icon> Reject\n                </button>\n                <button mat-menu-item (click)="changeStatus(\'resolve\',element._id)">\n                    <mat-icon matTooltip="Resolve">check</mat-icon> Resolve\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container> --\x3e\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n\n\n<div class="white_wrapper" *ngIf="otherRequests.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions" (page)="changePage($event)">\n    </mat-paginator>\n</div>\n'},buKM:function(e,t,n){"use strict";var a=n("mrSG"),l=n("CcnG"),r=n("gIcY"),i=n("FaG1"),o=100,s=8,c=20,d=3,m=100,u=10,p=10,h=3,f=1e3,g=1,b=10,_=2,v=20;n.d(t,"a",(function(){return C}));var C=function(){function e(){this.VALIDATION={name:[r.o.pattern(i.a.alphabetsWithSpace),r.o.minLength(d),r.o.maxLength(m)],profileName:[r.o.pattern(i.a.name),r.o.minLength(d),r.o.maxLength(m)],alphabetic:[r.o.pattern(i.a.alphabetsWithSpace),r.o.minLength(d),r.o.maxLength(m)],alphaNumeric:[r.o.pattern(i.a.alphaNumericWithSpace),r.o.minLength(d),r.o.maxLength(m)],price:[r.o.pattern(i.a.price),r.o.minLength(g),r.o.maxLength(b),r.o.min(0)],seatingCapacity:[r.o.required,r.o.pattern(i.a.phone),r.o.min(_),r.o.max(v)],email:[r.o.pattern(i.a.email),r.o.maxLength(o)],description:[r.o.pattern(i.a.name),r.o.minLength(h),r.o.maxLength(f)],password:[r.o.pattern(i.a.password),r.o.minLength(s),r.o.maxLength(c)],phone:[r.o.required,r.o.pattern(i.a.phone),r.o.minLength(u),r.o.maxLength(p)],crfLimitMonth:[r.o.required,r.o.pattern(i.a.onlyNumber)],cutOff:[],dropdown:[],checkbox:[],address:[r.o.required],longitude:[r.o.required],latitude:[r.o.required],startShift:[r.o.required],endShift:[r.o.required],googleAddress:[r.o.required,r.o.minLength(d),r.o.maxLength(m)],noSpace:[r.o.required,r.o.pattern(i.a.noSpace)]}}return e.prototype.matchPassword=function(e){var t=e.get("password").value,n=e.get("confirmPassword").value;t!==n?e.get("confirmPassword").setErrors({matchPassword:!0}):t===n&&e.get("confirmPassword").errors&&(delete e.get("confirmPassword").errors.matchPassword,0===Object.keys(e.get("confirmPassword").errors).length&&e.get("confirmPassword").setErrors(null))},e.prototype.getControl=function(e,t){void 0===t&&(t=!0);var n=this.VALIDATION[e].slice();return t&&("checkbox"===e?n.splice(0,0,r.o.requiredTrue):n.splice(0,0,r.o.required)),["",r.o.compose(n)]},e.prototype.getFilterFormControls=function(e){for(var t={},n=0,a=e;n<a.length;n++){t[a[n]]=[null]}return t},e=a.__decorate([Object(l.D)({providedIn:"root"}),a.__metadata("design:paramtypes",[])],e)}()},"c5r+":function(e,t,n){"use strict";n.r(t),t.default='<h4>\n  \x3c!-- {{dropdown.label}} --\x3e\n  &nbsp;\n</h4>\n<mat-form-field>\n  <mat-select [placeholder]="dropdown.label" [formControl]="dropdown.control">\n    <mat-option [value]="\'\'">All</mat-option>\n    <mat-option *ngFor="let item of dropdown.list" [value]="item.value">{{\n      item.viewValue\n    }}</mat-option>\n  </mat-select>\n</mat-form-field>\n'},dXe9:function(e,t,n){"use strict";n.r(t),t.default=""},gGSm:function(e,t,n){"use strict";n.r(t),t.default='\x3c!-- filter -- satyam --\x3e\n<div class="flex_row">\n<div class="flex_col_sm_5 rowFilterBox">\n    <app-search-filter\n      [placeholder]="\'Search by full name, id, email, cabId and contact no\'"\n      (setSearch)="setSearch($event)"\n    >\n    </app-search-filter>\n</div>\n<div class="flex_col_sm_5">\n    <ul class="btn_wrapper text-right">\n      <li>\n        <app-filter-count\n          [filterCount]="appliedFilterCount"\n        ></app-filter-count>\n      </li>\n      <li>\n        <button\n          mat-raised-button\n          (click)="showFilter = !showFilter"\n          color="primary"\n        >\n          <mat-icon>filter_list</mat-icon> Filter\n        </button>\n      </li>\n      </ul>\n</div>\n</div>\n<div\n  class="white_wrapper filter_wrapper"\n  [class.filter_wrapper_show]="showFilter"\n>\n  <div class="flex_row">\n    <div class="flex_col_sm_6">\n      <app-date-filter [dateObject]="filterObject.registrationDate">\n      </app-date-filter>\n    </div>\n    <div class="flex_col_sm_3">\n      <app-dropdown-filter\n        [dropdown]="filterObject.shiftType"\n      ></app-dropdown-filter>\n    </div>\n    <div class="flex_col_sm_3">\n      <h4>\n        &nbsp;\n      </h4>\n      <mat-form-field>\n        <mat-select\n          placeholder="Shift"\n          [formControl]="filterForm.controls.shiftName"\n        >\n          \x3c!-- <mat-option *ngFor="let item of shifts" [value]="item.shiftName">{{ item.shiftName}}</mat-option> --\x3e\n          \x3c!-- changes by satyam -> Includes shift timing --\x3e \n          <mat-option *ngFor="let item of shifts" [value]="item.shiftName"\n            >{{ item.shiftName+\' \'+\'(\'+item.startShift+\' - \'+item.endShift+\')\'}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class="flex_row">\n    <div class="flex_col_sm_10 text-center">\n      <ul class="btn_wrapper">\n        <li>\n          <button\n            filter_btn\n            mat-stroked-button\n            [disabled]="disable()"\n            (click)="resetFilter()"\n          >\n            Reset\n          </button>\n        </li>\n\n        <li>\n          <button\n            filter_btn\n            mat-raised-button\n            color="primary"\n            [disabled]="disable()"\n            (click)="filter()"\n          >\n            Filter\n          </button>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n<table mat-table [dataSource]="cancelled" class="mt-30">\n\n    <ng-container matColumnDef="position">\n        <th mat-header-cell *matHeaderCellDef> S.No. </th>\n        <td mat-cell *matCellDef="let element;let i=index"> {{getSerialNumber(i+1)}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="name">\n        <th mat-header-cell *matHeaderCellDef> Full Name </th>\n        <td mat-cell *matCellDef="let element"> {{element?.name | checkNull}} </td>\n    </ng-container>\n      \x3c!-- Added Emp ID - Shivakumar A  --\x3e\n    <ng-container matColumnDef="empId">\n        <th mat-header-cell *matHeaderCellDef> Emp Id </th>\n        <td mat-cell *matCellDef="let element">{{element.employeeId|checkNull}}</td>\n    </ng-container>\n      \x3c!-- Added Gender - Shivakumar A  --\x3e\n      <ng-container matColumnDef="gender">\n        <th mat-header-cell *matHeaderCellDef> Gender </th>\n        <td mat-cell *matCellDef="let element"> {{element?.gender | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="email">\n        <th mat-header-cell *matHeaderCellDef> Email ID </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.email }}"> {{element?.email | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="contact">\n        <th mat-header-cell *matHeaderCellDef> Contact Number </th>\n        <td mat-cell *matCellDef="let element">{{element?.mobileNo | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="cabid">\n        <th mat-header-cell *matHeaderCellDef> Cab ID </th>\n        \x3c!-- <td mat-cell *matCellDef="let element"> {{element?.roster?.cab?.cabBadge | checkNull}} </td> --\x3e\n        \x3c!-- Added newCabBadgeId - Shivakumar A --\x3e\n        <td mat-cell *matCellDef="let element"> {{element?.newCabBadgeId}}\n            \x3c!-- Added Medical cab - Shivakumar A --\x3e\n        <b class="medical_cab_symbol_option" *ngIf="element?.roster?.cab?.type === medicalCabValue">&#43;</b>\n    </td>\n    </ng-container>\n\n    <ng-container matColumnDef="scheduledfor">\n        <th mat-header-cell *matHeaderCellDef> Scheduled For </th>\n        <td mat-cell *matCellDef="let element"> {{element.scheduleTime | customDate}} {{element.shiftTime}}</td>\n    </ng-container>\n\n    \x3c!-- <ng-container matColumnDef="tripdate">\n        <th mat-header-cell *matHeaderCellDef> Trip Date </th>\n        <td mat-cell *matCellDef="let element"> {{element?.roster?.rosterDate | customDate}} </td>\n    </ng-container> --\x3e\n\n    \x3c!-- <ng-container matColumnDef="cabtime">\n        <th mat-header-cell *matHeaderCellDef> Cab Timmings </th>\n        <td mat-cell *matCellDef="let element"> {{element.tripdate}} </td>\n    </ng-container> --\x3e\n\n    <ng-container matColumnDef="pickup">\n        <th mat-header-cell *matHeaderCellDef> Pickup Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.pickUpLocation }}"> \n            {{element?.pickUpLocation | checkNull}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef="dropoff">\n        <th mat-header-cell *matHeaderCellDef> DropOff Location </th>\n        <td mat-cell *matCellDef="let element" title="{{ element?.roster?.officeAddress }}"> \n            {{element?.roster?.officeAddress | checkNull}} </td>\n    </ng-container>\n\x3c!--  Added ShiftType - Shivakumar A --\x3e\n<ng-container matColumnDef="shifttype">\n    <th mat-header-cell *matHeaderCellDef> Shift Type </th>\n    <td mat-cell *matCellDef="let element"> \n        {{element?.shiftType | checkNull}} </td>\n</ng-container>\n\n    <ng-container matColumnDef="cancellreason">\n        <th mat-header-cell *matHeaderCellDef>Reason For Cancellation </th>\n        <td mat-cell *matCellDef="let element"> {{element.reason | checkNull}} </td>\n    </ng-container>\n\n\x3c!-- Added Cancelled Time  - Shivakumar A --\x3e\n<ng-container matColumnDef="createdAt">\n    <th mat-header-cell *matHeaderCellDef >Cancelled At</th>\n    <td mat-cell *matCellDef="let element"> {{element.cancelledAt | date:\'short\'}} </td>\n</ng-container>\n\n\n    \x3c!-- Symbol Column --\x3e\n    \x3c!-- <ng-container matColumnDef="action">\n        <th mat-header-cell *matHeaderCellDef> Action </th>\n        <td mat-cell *matCellDef="let element">\n            <button mat-button [matMenuTriggerFor]="menu" class="btn-more-menu">\n                <mat-icon>more_vert</mat-icon>\n            </button>\n            <mat-menu #menu="matMenu">\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Delete">delete</mat-icon> Delete\n                </button>\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Edit">edit</mat-icon> Edit\n                </button>\n                <button mat-menu-item>\n                    <mat-icon matTooltip="Blocked">block</mat-icon>\n                    Block\n                </button>\n            </mat-menu>\n        </td>\n    </ng-container> --\x3e\n\n    <tr mat-header-row *matHeaderRowDef="displayedColumns"></tr>\n    <tr mat-row *matRowDef="let row; columns: displayedColumns;"></tr>\n</table>\n\n<div class="white_wrapper" *ngIf="total===0">\n    <h2 class="not-found">No Data Found</h2>\n</div>\n\n\n<div class="white_wrapper" *ngIf="cancelled.data.length">\n    <mat-paginator [length]="total" [pageIndex]="page-1" [pageSize]="pageSize" [pageSizeOptions]="pageOptions"\n        (page)="changePage($event)">\n    </mat-paginator>\n</div>'},"oit+":function(e,t,n){"use strict";n.r(t),t.default=".btn-more-menu {\n  background: transparent;\n}\n\n.btn-more-menu .mat-icon {\n  padding-top: 4px;\n}\n\n.medical_cab_symbol_option {\n  font-size: 20px;\n  color: red;\n}"},pUTM:function(e,t,n){"use strict";n.r(t),t.default=".btn-more-menu {\n  background: transparent;\n}\n\n.btn-more-menu .mat-icon {\n  padding-top: 4px;\n}\n\n.medical_cab_symbol_option {\n  font-size: 20px;\n  color: red;\n}"},q8mc:function(e,t,n){"use strict";n.r(t),t.default=".filter-count {\n  cursor: default;\n  pointer-events: none;\n  color: #636F73;\n  font-size: 13px;\n}"},qpK1:function(e,t,n){"use strict";n.r(t),t.default='<h4>{{dateObject.label}}</h4>\n<div class="flex_row">\n  <div class="flex_col_sm_6">\n    <mat-form-field>\n      <input matInput [matDatepicker]="picker1" [formControl]="dateObject.fromDate" [max]="maxDate" (click)="picker1.open()"\n        (dateChange)="dateChange($event)" placeholder="From Date" readonly>\n      <mat-datepicker-toggle matSuffix [for]="picker1"></mat-datepicker-toggle>\n      <mat-datepicker #picker1></mat-datepicker>\n    </mat-form-field>\n  </div>\n  <div class="flex_col_sm_6">\n    <mat-form-field>\n      <input #toDate matInput [formControl]="dateObject.toDate" (dateChange)="setToDate()" [max]="maxDate" [min]="minDate"\n        [matDatepicker]="picker2" (click)="picker2.open()" placeholder="To Date" readonly>\n      <mat-datepicker-toggle matSuffix [for]="picker2"></mat-datepicker-toggle>\n      <mat-datepicker #picker2></mat-datepicker>\n    </mat-form-field>\n  </div>\n</div>\n'},utZl:function(e,t,n){"use strict";n.r(t),t.default=""}}]);