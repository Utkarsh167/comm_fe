(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{DcnD:function(e,r,t){"use strict";t.r(r),r.default='<div class="custom_container">\n    <form [formGroup]="driverForm" #form="ngForm" (ngSubmit)="submitForm()">\n        <div class="white_wrapper">\n            <h2 class="heading">Genral Information</h2>\n            <div class="flex_row">\n                <ul class="breadcrumb">\n                    <li>\n                        <a href="javascript:void(0)">Stakeholders</a>\n                    </li>\n                    <li>\n                        <a routerLink="/admin/stakeholders/driver">Driver</a>\n                    </li>\n                    <li>\n                        <a href="javascript:void(0)" class="active">{{driverId?\'Edit\':\'Add\'}}</a>\n                    </li>\n                </ul>\n            </div>\n\n            <div class="form_wrapper">\n                <div class="form_filed_wrapper">\n                    <label class="form_label">Upload Driver Image</label>\n                    <figure class="upload_img">\n                        <img [src]="driverImage || \'assets/images/placeholder-profile.jpg\'" />\n                        <label class="upload-icon" for="upload_driver_img">\n              <mat-icon>camera</mat-icon>\n            </label>\n                    </figure>\n                    <input type="file" (change)="\n              onSelectFile(\n                $event,\n                documentTypes.driverImage,\n                \'image/jpeg,image/png\'\n              )\n            " id="upload_driver_img" style="display:none;" />\n                    <p *ngIf="form.submitted && getControl(\'profilePicture\').invalid" class="profile_pic_error">\n                        {{ getControl("profilePicture") | validate: "Driver Image" }}\n                    </p>\n                </div>\n\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Driver Name</mat-label>\n                                <input formControlName="name" matInput />\n                                <mat-error>{{ getControl("name") | validate: "Driver Name" }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            \x3c!-- disable field for edit - satyam --\x3e\n                            <mat-form-field appearance="outline" [class.disabled]="driverId">\n                                <mat-label>Email</mat-label>\n                                \x3c!-- disable field for edit - satyam --\x3e\n                                <input formControlName="email" matInput [readonly]="driverId" />\n                                <mat-error>{{ getControl("email") | validate: "Email" }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Driver Mobile Number</mat-label>\n                                <input formControlName="mobileNo" numberOnly matInput  /> \n                                \x3c!-- [readonly]="driverId" --\x3e\n                                <mat-error>{{ getControl("mobileNo") | validate: "Driver Mobile Number":"digits" }}\n                                </mat-error>\n                                <mat-error *ngIf="isUniqueMsg">{{ isUniqueMsg }}</mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Emergency Number</mat-label>\n                                <input formControlName="emergencyNo" numberOnly matInput />\n                                <mat-error>{{ getControl("emergencyNo") | validate: "Emergency Number":"digits" }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="white_wrapper">\n            <h2 class="heading">Additional Information</h2>\n\n            <div class="form_wrapper">\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <label class="form_label">Drunker</label>\n\n                            <mat-radio-group aria-label="Select an option" formControlName="drunker">\n                                <div class="flex_row">\n                                    <div class="flex_col_sm_3" *ngFor="let option of drinkingStatus">\n                                        <mat-radio-button [value]="option.value">{{ option.viewValue }}\n                                        </mat-radio-button>\n                                    </div>\n                                </div>\n                                <mat-error class="error_size" *ngIf="form.submitted && getControl(\'drunker\').invalid">\n                                    {{ getControl("drunker") | validate: "Drinking Status" }}\n                                </mat-error>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <label class="form_label">Alcoholic/Non Alcoholic</label>\n                            <mat-radio-group aria-label="Select an option" formControlName="alcoholic">\n                                <div class="flex_row">\n                                    <div class="flex_col_sm_3" *ngFor="let option of radioOptions">\n                                        <mat-radio-button [value]="option.value">{{ option.viewValue }}\n                                        </mat-radio-button>\n                                    </div>\n                                </div>\n                                <mat-error class="error_size" *ngIf="form.submitted && getControl(\'alcoholic\').invalid">\n                                    {{ getControl("alcoholic") | validate: "Alcoholic Status" }}\n                                </mat-error>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <label class="form_label">Consuming Tobacco</label>\n\n                            <mat-radio-group aria-label="Select an option" formControlName="tobacco">\n                                <div class="flex_row">\n                                    <div class="flex_col_sm_3" *ngFor="let option of radioOptions">\n                                        <mat-radio-button [value]="option.value">{{ option.viewValue }}\n                                        </mat-radio-button>\n                                    </div>\n                                </div>\n                                <mat-error class="error_size" *ngIf="form.submitted && getControl(\'tobacco\').invalid">\n                                    {{ getControl("tobacco") | validate: "Tobacco Status" }}\n                                </mat-error>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <label class="form_label">BGV(Background Verification) Conducted</label>\n                            <mat-radio-group aria-label="Select an option" formControlName="backgroundVarified">\n                                <div class="flex_row">\n                                    <div class="flex_col_sm_3" *ngFor="let option of radioOptions">\n                                        <mat-radio-button [value]="option.value">{{ option.viewValue }}\n                                        </mat-radio-button>\n                                    </div>\n                                </div>\n                                <mat-error class="error_size" *ngIf="\n                    form.submitted && getControl(\'backgroundVarified\').invalid\n                  ">\n                                    {{ getControl("backgroundVarified") | validate: "Background Verification Status" }}\n                                </mat-error>\n                            </mat-radio-group>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="white_wrapper">\n            <h2 class="heading">Documents</h2>\n\n            <div class="form_wrapper">\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Address Proof</mat-label>\n                                <input matInput formControlName="addressProof" readonly />\n                                <label class="attach" for="address_proof">\n                  <mat-icon matSuffix>attach_file</mat-icon>\n                </label>\n                                <mat-error>{{ getControl("addressProof") | validate: "Address Proof" }}\n                                </mat-error>\n                            </mat-form-field>\n                            <input type="file" id="address_proof" (change)="onSelectFile($event, documentTypes.addressProof)" style="display:none;" />\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Driving License</mat-label>\n                                <input matInput formControlName="dl" readonly />\n                                <label class="attach" for="dl_proof">\n                  <mat-icon matSuffix>attach_file</mat-icon>\n                </label>\n                                <mat-error>{{ getControl("dl") | validate: "Driving License" }}\n                                </mat-error>\n                            </mat-form-field>\n                            <input type="file" id="dl_proof" (change)="onSelectFile($event, documentTypes.fullDl)" style="display:none;" />\n                        </div>\n                    </div>\n                </div>\n\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>DL Badge Number</mat-label>\n                                <input formControlName="DlBadgeNO" matInput />\n                                <mat-error>{{ getControl("DlBadgeNO") | validate: "Driving License Badge Number" }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>DL Renewal Date</mat-label>\n                                <input matInput [matDatepicker]="picker1" [min]="minDate" formControlName="dlRenewalDate" (click)="picker1.open()" readonly />\n                                <mat-datepicker-toggle matSuffix [for]="picker1"></mat-datepicker-toggle>\n                                <mat-datepicker #picker1></mat-datepicker>\n                                <mat-error>{{ getControl("dlRenewalDate") | validate: "Driving License Renewal Date" }}\n                                </mat-error>\n                            </mat-form-field>\n                        </div>\n                    </div>\n                </div>\n\n                <div class="flex_row">\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Right Palm</mat-label>\n                                <input matInput formControlName="rightPalm" readonly />\n                                <label class="attach" for="right_palm">\n                  <mat-icon matSuffix>attach_file</mat-icon>\n                </label>\n                                <mat-error>{{ getControl("rightPalm") | validate: "Right Palm" }}\n                                </mat-error>\n                            </mat-form-field>\n                            <input type="file" id="right_palm" (change)="onSelectFile($event, documentTypes.rightPalm)" style="display:none;" />\n                        </div>\n                    </div>\n\n                    <div class="flex_col_sm_5">\n                        <div class="form_filed_wrapper">\n                            <mat-form-field appearance="outline">\n                                <mat-label>Left Palm</mat-label>\n                                <input matInput formControlName="leftPalm" readonly />\n                                <label class="attach" for="left_palm">\n                  <mat-icon matSuffix>attach_file</mat-icon>\n                </label>\n                                <mat-error>{{ getControl("leftPalm") | validate: "Left Palm" }}\n                                </mat-error>\n                            </mat-form-field>\n                            <input type="file" id="left_palm" (change)="onSelectFile($event, documentTypes.leftPalm)" style="display:none;" />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class="white_wrapper">\n            <div class="flex-row">\n                <span class="alert-message">All fields are mandatory</span>\n            </div>\n            <div class="flex-row">\n                <div class="flex-col-sm-10">\n                    <div class="form_filed_wrapper text-center">\n                        <ul class="btn_wrapper">\n                            <li>\n                                <button mat-raised-button type="button" [routerLink]="\'DRIVER\' | absolutePath">\n                  Cancel\n                </button>\n                            </li>\n                            <li>\n                                <button mat-raised-button type="submit" color="primary">\n                  {{ driverId ? "Update" : "Add" }}\n                </button>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</div>'},pxcG:function(e,r,t){"use strict";t.r(r);var n=t("mrSG"),i=t("CcnG"),a=t("ZYCi"),o=t("Ip0R"),l=t("buKM"),d=t("gIcY"),s=t("FTgb"),m=t("67Y/"),c=t("9Z1F"),p=t("XlPw"),f=t("iiAa"),u=t("vblm"),v=t("jRgp"),h=t("X11Z"),g=function(){function e(e,r,t,n,i){this._formService=e,this._formBuilder=r,this._http=t,this._uitilityService=n,this._fileUploadService=i}return e.prototype.createDriverForm=function(){return this._formBuilder.group({name:this._formService.getControl("name"),email:this._formService.getControl("email"),mobileNo:this._formService.getControl("phone"),addressProof:this._formService.getControl("dropdown",!1),dl:this._formService.getControl("dropdown",!1),rightPalm:this._formService.getControl("dropdown",!1),leftPalm:this._formService.getControl("dropdown",!1),profilePicture:this._formService.getControl("dropdown",!1),emergencyNo:this._formService.getControl("phone"),drunker:this._formService.getControl("dropdown"),alcoholic:this._formService.getControl("dropdown"),tobacco:this._formService.getControl("dropdown"),backgroundVarified:this._formService.getControl("dropdown"),dlRenewalDate:this._formService.getControl("dropdown",!1),DlBadgeNO:this._formService.getControl("alphaNumeric",!1)})},e.prototype.addDriver=function(e){var r=this,t=e.userId?"put":"post";return this._http[t](v.a,e).pipe(Object(m.a)((function(t){return r._uitilityService.showAlert(u.d[e.userId?"UPDATED":"ADDED"]("Driver")),t})),Object(c.a)((function(e){return Object(p.a)(e)})))},e.prototype.checkDriverNoUnique=function(e){return this._http.get(v.D,e,!1)},e.prototype.showAlert=function(e){this._uitilityService.showAlert(e)},e.prototype.uploadFiles=function(e){return this._fileUploadService.uploadFiles(e)},e.prototype.getDriverDetail=function(e){return this._http.get(v.Ob,{userId:e})},e.ctorParameters=function(){return[{type:l.a},{type:d.d},{type:s.a},{type:f.a},{type:h.a}]},e=n.__decorate([Object(i.D)(),n.__metadata("design:paramtypes",[l.a,d.d,s.a,f.a,h.a])],e)}(),_=t("yG5I"),b=t("Oy5v"),y=t("Ja9P"),w=t("Gi3i"),x=t("ad02"),D=function(){function e(e,r,t){this._driverAddService=e,this._router=r,this._route=t,this.radioOptions=_.j,this.documentTypes=_.b,this.drinkingStatus=_.c,this.createForm()}return e.prototype.ngOnInit=function(){this.driverId=this._route.snapshot.params.driverId,this.minDate=new Date,this.driverId?this.getDriverDetail():this.validateMobileNo()},e.prototype.validateMobileNo=function(){var e=this;this.driverForm.controls.mobileNo.valueChanges.pipe(Object(w.a)(800),Object(x.a)()).subscribe((function(r){r&&r.length>=3&&e.checkDriverNoUnique(r)}))},e.prototype.checkDriverNoUnique=function(e){var r=this;this._driverAddService.checkDriverNoUnique({mobileNo:e}).subscribe((function(e){e&&200==e.statusCode?r.isUniqueMsg=null:e&&400==e.statusCode&&(r.driverForm.controls.mobileNo.setErrors({incorrect:!0}),r.isUniqueMsg="Mobile Number must be unique")}))},e.prototype.createForm=function(){this.driverForm=this._driverAddService.createDriverForm()},e.prototype.getDriverDetail=function(){var e=this;this._driverAddService.getDriverDetail(this.driverId).subscribe((function(r){e.driverDetail=r.data,e.patchValue(r.data)}),(function(r){e._router.navigate([b.DRIVER])}))},e.prototype.patchValue=function(e){var r=this,t=e.documents.filter((function(e){return e.type===r.documentTypes.addressProof}))[0],n=e.documents.filter((function(e){return e.type===r.documentTypes.fullDl}))[0],i=e.documents.filter((function(e){return e.type===r.documentTypes.leftPalm}))[0],a=e.documents.filter((function(e){return e.type===r.documentTypes.rightPalm}))[0],o={name:e.name,email:e.email,mobileNo:e.mobileNo,addressProof:t?this.getFileName(t.frontImageUrl):"",dl:n?this.getFileName(n.frontImageUrl):"",rightPalm:a?this.getFileName(a.frontImageUrl):"",leftPalm:i?this.getFileName(i.frontImageUrl):"",profilePicture:e?this.getFileName(e.profilePicture):"",emergencyNo:e.emergencyNo,drunker:e.drunker,alcoholic:e.alcoholic,tobacco:e.tobacco,backgroundVarified:e.backgroundVarified,dlRenewalDate:new Date(e.dlRenewalDate),DlBadgeNO:e.DlBadgeNO};this.driverForm.patchValue(o),this.driverImage=e?e.profilePicture:"",this.addressProof=t?t.frontImageUrl:"",this.leftPalmUrl=i?i.frontImageUrl:"",this.rightPalmUrl=a?a.frontImageUrl:"",this.dlUrl=n?n.frontImageUrl:"",this.minDate=new Date(Math.min(new Date(e.dlRenewalDate).getTime(),(new Date).getTime()))},e.prototype.getControl=function(e){return this.driverForm.controls[e]},e.prototype.uploadFiles=function(){return n.__awaiter(this,void 0,void 0,(function(){var e;return n.__generator(this,(function(r){switch(r.label){case 0:return r.trys.push([0,2,,3]),[4,this._driverAddService.uploadFiles([this.driverImageFile,this.dlFile,this.leftPalmFile,this.rightPalmFile,this.addressProofFile])];case 1:return[2,r.sent()];case 2:return e=r.sent(),[2,Promise.reject(e)];case 3:return[2]}}))}))},e.prototype.getFileName=function(e){return Object(_.p)(e)},e.prototype.submitForm=function(){return n.__awaiter(this,void 0,void 0,(function(){var e,r,t;return n.__generator(this,(function(i){switch(i.label){case 0:return this.driverForm.invalid||this.driverForm.disabled?[2]:(e=n.__assign({},this.driverForm.value),this.driverForm.disable(),delete e.addressProof,delete e.dl,delete e.rightPalm,delete e.leftPalm,delete e.profilePicture,[4,this.uploadFiles()]);case 1:return r=i.sent(),e.profilePicture=r[0]?r[0].Location:this.driverImage,(t=[]).push({type:this.documentTypes.fullDl,frontImageUrl:r[1]?r[1].Location:this.dlUrl}),t.push({type:this.documentTypes.leftPalm,frontImageUrl:r[2]?r[2].Location:this.leftPalmUrl}),t.push({type:this.documentTypes.rightPalm,frontImageUrl:r[3]?r[3].Location:this.rightPalmUrl}),t.push({type:this.documentTypes.addressProof,frontImageUrl:r[4]?r[4].Location:this.addressProof}),e.documents=t,e.dlRenewalDate=new Date(e.dlRenewalDate).getTime(),this.addDriver(e),[2]}}))}))},e.prototype.addDriver=function(e){var r=this;this.driverId&&(e.userId=this.driverId),this._driverAddService.addDriver(e).subscribe((function(e){r._router.navigate([b.DRIVER])}),(function(e){r.driverForm.enable()}))},e.prototype.onSelectFile=function(e,r,t){return void 0===t&&(t="image/jpeg,image/png,application/pdf"),n.__awaiter(this,void 0,void 0,(function(){var i,a;return n.__generator(this,(function(n){switch(n.label){case 0:return n.trys.push([0,2,,3]),[4,Object(y.a)(e,t)];case 1:return i=n.sent(),this.handleFileSuccess(i,r),[3,3];case 2:return(a=n.sent()).type?"image/jpeg,image/png,application/pdf"===t?this._driverAddService.showAlert(Object(u.j)("image/jpeg,image/png images and pdf")):this._driverAddService.showAlert(Object(u.j)()):a.size&&this._driverAddService.showAlert(Object(u.k)()),[3,3];case 3:return[2]}}))}))},e.prototype.handleFileSuccess=function(e,r){switch(r){case this.documentTypes.driverImage:this.driverImage=e.url,this.driverImageFile=e.file,this.driverForm.controls.profilePicture.setValue(e.name);break;case this.documentTypes.fullDl:this.dlUrl=e.url,this.dlFile=e.file,this.driverForm.controls.dl.setValue(e.name);break;case this.documentTypes.leftPalm:this.leftPalmUrl=e.url,this.leftPalmFile=e.file,this.driverForm.controls.leftPalm.setValue(e.name);break;case this.documentTypes.rightPalm:this.rightPalmUrl=e.url,this.rightPalmFile=e.file,this.driverForm.controls.rightPalm.setValue(e.name);break;case this.documentTypes.addressProof:this.addressProof=e.url,this.addressProofFile=e.file,this.driverForm.controls.addressProof.setValue(e.name);break;default:alert("Wrong Type")}},e.ctorParameters=function(){return[{type:g},{type:a.d},{type:a.a}]},e=n.__decorate([Object(i.n)({selector:"app-driver-add",template:n.__importDefault(t("DcnD")).default,styles:[n.__importDefault(t("tk1l")).default]}),n.__metadata("design:paramtypes",[g,a.d,a.a])],e)}(),P=t("Wf4p"),I=t("jQLj"),C=t("seP3"),F=t("b716"),S=t("9It4"),k=t("UodH"),N=t("SMsm"),U=t("3V+5"),A=t("FpXt"),j=t("IKo7");t.d(r,"DriverAddModule",(function(){return T}));var T=function(){function e(){}return e=n.__decorate([Object(i.L)({declarations:[D],imports:[o.c,P.n,I.a,C.c,F.b,S.a,k.a,d.n,U.a,j.a,A.a,N.a,a.e.forChild([{path:"",component:D}])],providers:[g]})],e)}()},tk1l:function(e,r,t){"use strict";t.r(r),r.default='@charset "UTF-8";\n.upload_img {\n  width: 150px;\n  height: 150px;\n  overflow: hidden;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  position: relative;\n  margin: 0 auto;\n}\n.upload_img img {\n  width: 150px;\n  height: 150px;\n  -o-object-fit: cover;\n     object-fit: cover;\n}\n.upload-icon {\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  -webkit-transform: translateX(-50%);\n          transform: translateX(-50%);\n  background: #606060;\n  padding: 5px 8px;\n  display: -webkit-box;\n  display: flex;\n  -webkit-box-pack: center;\n          justify-content: center;\n  -webkit-box-align: center;\n          align-items: center;\n  border-radius: 6px 6px 0 0;\n  color: #fff;\n  cursor: pointer;\n}\nlabel.attach {\n  position: absolute;\n  right: 0px;\n  top: 10px;\n  z-index: 9;\n  cursor: pointer;\n}\n.profile_pic_error {\n  margin-top: 5px;\n  color: #f44336;\n  text-align: center;\n}\n.flex_row {\n  display: -webkit-box;\n  display: flex;\n  margin: 0 -10px;\n  -webkit-box-align: center;\n          align-items: center;\n}\n.breadcrumb {\n  width: 100%;\n  padding: 5px 15px;\n}\n.breadcrumb li {\n  display: inline-block;\n}\n.breadcrumb li a {\n  color: #006CB8;\n  text-decoration: none;\n  cursor: pointer;\n  font-size: 14px;\n  font-weight: 400;\n  outline: none;\n}\n.breadcrumb li a:before {\n  padding: 0 5px;\n  color: #B7BEC1;\n  content: "/ ";\n}\n.breadcrumb li a:after {\n  content: "/ ";\n  padding: 0 2px;\n  color: #A2ABAE;\n}\n.breadcrumb li a.active {\n  color: #262c2d;\n  cursor: default;\n}\n.breadcrumb li a.active:after {\n  display: none;\n}\n.breadcrumb li:first-child a:before, .breadcrumb li:first-child a:after, .breadcrumb li:last-child a:before, .breadcrumb li:last-child a:after {\n  display: none;\n}\n@media (max-width: 1510px) {\n  .flex_col_sm_3 {\n    width: 35%;\n  }\n}\n@media (max-width: 1300px) {\n  .flex_col_sm_3 {\n    width: 33%;\n  }\n}\n.error_size {\n  font-size: 75%;\n}\nbutton.mat-raised-button {\n  box-shadow: none !important;\n  border: 1px solid #79f2c0 !important;\n  min-width: 104px !important;\n}\n:host ::ng-deep .disabled {\n  opacity: 0.5;\n  cursor: initial;\n}\n:host ::ng-deep .disabled .mat-form-field-flex:hover .mat-form-field-outline-start,\n:host ::ng-deep .disabled .mat-form-field-flex:hover .mat-form-field-outline-end,\n:host ::ng-deep .disabled .mat-form-field-flex:hover .mat-form-field-outline-gap {\n  border-width: 1px !important;\n  border-color: #e0e0e0 !important;\n}'}}]);